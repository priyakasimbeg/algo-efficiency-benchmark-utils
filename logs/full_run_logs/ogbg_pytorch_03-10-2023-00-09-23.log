WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
I0310 00:09:39.377332 139811000866624 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 6
I0310 00:09:39.398670 139631761610560 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 1
I0310 00:09:39.399340 139673303791424 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 4
I0310 00:09:39.400030 139922655180608 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 7
I0310 00:09:39.403282 140583348655936 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 2
I0310 00:09:40.344658 140301935572800 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 3
I0310 00:09:40.350216 140462298965824 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 5
I0310 00:09:40.351194 140372199180096 distributed_c10d.py:319] Added key: store_based_barrier_key:1 to store for rank: 0
I0310 00:09:40.351573 140372199180096 distributed_c10d.py:353] Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.355172 140301935572800 distributed_c10d.py:353] Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.358036 139673303791424 distributed_c10d.py:353] Rank 4: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.358058 139922655180608 distributed_c10d.py:353] Rank 7: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.360375 139811000866624 distributed_c10d.py:353] Rank 6: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.360591 139631761610560 distributed_c10d.py:353] Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.360648 140583348655936 distributed_c10d.py:353] Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.360818 140462298965824 distributed_c10d.py:353] Rank 5: Completed store-based barrier for key:store_based_barrier_key:1 with 8 nodes.
I0310 00:09:40.921280 140372199180096 logger_utils.py:67] Creating experiment directory at /experiment_runs/timing/ogbg_pytorch.
W0310 00:09:41.003631 139673303791424 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.004471 139631761610560 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.005064 140462298965824 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.006090 139811000866624 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.006393 140301935572800 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.006512 139922655180608 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.006934 140583348655936 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
W0310 00:09:41.007235 140372199180096 xla_bridge.py:352] No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
I0310 00:09:41.011670 140372199180096 submission_runner.py:485] Using RNG seed 200950495
I0310 00:09:41.012872 140372199180096 submission_runner.py:494] --- Tuning run 1/1 ---
I0310 00:09:41.012984 140372199180096 submission_runner.py:499] Creating tuning directory at /experiment_runs/timing/ogbg_pytorch/trial_1.
I0310 00:09:41.013178 140372199180096 logger_utils.py:84] Saving hparams to /experiment_runs/timing/ogbg_pytorch/trial_1/hparams.json.
I0310 00:09:41.014038 140372199180096 submission_runner.py:230] Initializing dataset.
I0310 00:09:41.014144 140372199180096 submission_runner.py:237] Initializing model.
I0310 00:09:44.798311 140372199180096 submission_runner.py:247] Initializing optimizer.
I0310 00:09:44.919364 140372199180096 submission_runner.py:254] Initializing metrics bundle.
I0310 00:09:44.919549 140372199180096 submission_runner.py:269] Initializing checkpoint and logger.
I0310 00:09:44.921590 140372199180096 logger_utils.py:231] Unable to record workload.train_mean information. Continuing without it.
I0310 00:09:44.921723 140372199180096 logger_utils.py:231] Unable to record workload.train_stddev information. Continuing without it.
I0310 00:09:45.368280 140372199180096 submission_runner.py:290] Saving meta data to /experiment_runs/timing/ogbg_pytorch/trial_1/meta_data_0.json.
I0310 00:09:45.369115 140372199180096 submission_runner.py:293] Saving flags to /experiment_runs/timing/ogbg_pytorch/trial_1/flags_0.json.
I0310 00:09:45.403769 140372199180096 submission_runner.py:303] Starting training loop.
I0310 00:09:45.614831 140372199180096 dataset_info.py:566] Load dataset info from /data/ogbg/ogbg_molpcba/0.1.3
I0310 00:09:45.620248 140372199180096 dataset_builder.py:510] Reusing dataset ogbg_molpcba (/data/ogbg/ogbg_molpcba/0.1.3)
I0310 00:09:45.711337 140372199180096 logging_logger.py:49] Constructing tf.data.Dataset ogbg_molpcba for split train, from /data/ogbg/ogbg_molpcba/0.1.3
I0310 00:09:50.686693 140334449268480 logging_writer.py:48] [0] global_step=0, grad_norm=2.114973, loss=0.802582
I0310 00:09:50.693189 140372199180096 pytorch_submission_base.py:86] 0) loss = 0.803, grad_norm = 2.115
I0310 00:09:50.697428 140372199180096 spec.py:298] Evaluating on the training split.
I0310 00:09:50.702961 140372199180096 dataset_info.py:566] Load dataset info from /data/ogbg/ogbg_molpcba/0.1.3
I0310 00:09:50.706545 140372199180096 dataset_builder.py:510] Reusing dataset ogbg_molpcba (/data/ogbg/ogbg_molpcba/0.1.3)
I0310 00:09:50.757456 140372199180096 logging_logger.py:49] Constructing tf.data.Dataset ogbg_molpcba for split train, from /data/ogbg/ogbg_molpcba/0.1.3
W0310 00:10:06.334246 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.573812 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.573838 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.573893 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.574570 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.574868 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.580967 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:06.588472 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.186809 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.357326 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.357929 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.360274 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.361322 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.361395 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.361499 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:21.361543 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:10:44.761531 140372199180096 spec.py:310] Evaluating on the validation split.
I0310 00:10:44.764955 140372199180096 dataset_info.py:566] Load dataset info from /data/ogbg/ogbg_molpcba/0.1.3
I0310 00:10:44.770081 140372199180096 dataset_builder.py:510] Reusing dataset ogbg_molpcba (/data/ogbg/ogbg_molpcba/0.1.3)
I0310 00:10:44.825993 140372199180096 logging_logger.py:49] Constructing tf.data.Dataset ogbg_molpcba for split validation, from /data/ogbg/ogbg_molpcba/0.1.3
W0310 00:10:58.639771 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.798229 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.799936 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.802339 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.802933 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.802987 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.803190 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:10:58.804110 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.463690 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.614655 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.617803 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.619134 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.619373 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.619648 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.619756 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:04.619964 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:11:27.331747 140372199180096 spec.py:326] Evaluating on the test split.
I0310 00:11:27.334974 140372199180096 dataset_info.py:566] Load dataset info from /data/ogbg/ogbg_molpcba/0.1.3
I0310 00:11:27.339212 140372199180096 dataset_builder.py:510] Reusing dataset ogbg_molpcba (/data/ogbg/ogbg_molpcba/0.1.3)
I0310 00:11:27.394529 140372199180096 logging_logger.py:49] Constructing tf.data.Dataset ogbg_molpcba for split test, from /data/ogbg/ogbg_molpcba/0.1.3
W0310 00:11:41.278352 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.443740 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.443886 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.447690 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.447895 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.448070 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.448380 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:41.448409 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.150385 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.312345 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.313071 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.316622 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.316708 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.317176 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.317244 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:11:47.317421 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:12:11.001142 140372199180096 submission_runner.py:363] Time since start: 5.29s, 	Step: 1, 	{'train/accuracy': 0.49126385536926753, 'train/loss': 0.7915090918540955, 'train/mean_average_precision': 0.02229937079799641, 'validation/accuracy': 0.4928164733983001, 'validation/loss': 0.7820726633071899, 'validation/mean_average_precision': 0.025372116567514376, 'validation/num_examples': 43793, 'test/accuracy': 0.492324779852068, 'test/loss': 0.7814265489578247, 'test/mean_average_precision': 0.02763378395349064, 'test/num_examples': 43793}
I0310 00:12:11.009437 140320179816192 logging_writer.py:48] [1] global_step=1, preemption_count=0, score=5.292001, test/accuracy=0.492325, test/loss=0.781427, test/mean_average_precision=0.027634, test/num_examples=43793, total_duration=5.294099, train/accuracy=0.491264, train/loss=0.791509, train/mean_average_precision=0.022299, validation/accuracy=0.492816, validation/loss=0.782073, validation/mean_average_precision=0.025372, validation/num_examples=43793
I0310 00:12:11.267913 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_1.
I0310 00:12:11.512293 140372199180096 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.518592 139631761610560 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519002 140301935572800 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519195 140583348655936 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519472 139811000866624 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519474 139673303791424 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519486 139922655180608 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.519887 140462298965824 distributed.py:1027] Reducer buckets have been rebuilt in this iteration.
I0310 00:12:11.556010 140320188208896 logging_writer.py:48] [1] global_step=1, grad_norm=2.095371, loss=0.801765
I0310 00:12:11.559683 140372199180096 pytorch_submission_base.py:86] 1) loss = 0.802, grad_norm = 2.095
I0310 00:12:11.837525 140320179816192 logging_writer.py:48] [2] global_step=2, grad_norm=2.058510, loss=0.792069
I0310 00:12:11.841292 140372199180096 pytorch_submission_base.py:86] 2) loss = 0.792, grad_norm = 2.059
I0310 00:12:12.117799 140320188208896 logging_writer.py:48] [3] global_step=3, grad_norm=1.943290, loss=0.767098
I0310 00:12:12.121390 140372199180096 pytorch_submission_base.py:86] 3) loss = 0.767, grad_norm = 1.943
I0310 00:12:12.403305 140320179816192 logging_writer.py:48] [4] global_step=4, grad_norm=1.650954, loss=0.729764
I0310 00:12:12.406680 140372199180096 pytorch_submission_base.py:86] 4) loss = 0.730, grad_norm = 1.651
I0310 00:12:12.681762 140320188208896 logging_writer.py:48] [5] global_step=5, grad_norm=1.316160, loss=0.685550
I0310 00:12:12.685281 140372199180096 pytorch_submission_base.py:86] 5) loss = 0.686, grad_norm = 1.316
I0310 00:12:12.959860 140320179816192 logging_writer.py:48] [6] global_step=6, grad_norm=1.108803, loss=0.644440
I0310 00:12:12.963416 140372199180096 pytorch_submission_base.py:86] 6) loss = 0.644, grad_norm = 1.109
I0310 00:12:13.236870 140320188208896 logging_writer.py:48] [7] global_step=7, grad_norm=0.953176, loss=0.610924
I0310 00:12:13.240340 140372199180096 pytorch_submission_base.py:86] 7) loss = 0.611, grad_norm = 0.953
I0310 00:12:13.515050 140320179816192 logging_writer.py:48] [8] global_step=8, grad_norm=0.807928, loss=0.580439
I0310 00:12:13.518780 140372199180096 pytorch_submission_base.py:86] 8) loss = 0.580, grad_norm = 0.808
I0310 00:12:13.793320 140320188208896 logging_writer.py:48] [9] global_step=9, grad_norm=0.717209, loss=0.550932
I0310 00:12:13.796748 140372199180096 pytorch_submission_base.py:86] 9) loss = 0.551, grad_norm = 0.717
I0310 00:12:14.076564 140320179816192 logging_writer.py:48] [10] global_step=10, grad_norm=0.638530, loss=0.526087
I0310 00:12:14.080175 140372199180096 pytorch_submission_base.py:86] 10) loss = 0.526, grad_norm = 0.639
I0310 00:12:14.352345 140320188208896 logging_writer.py:48] [11] global_step=11, grad_norm=0.583555, loss=0.500254
I0310 00:12:14.355942 140372199180096 pytorch_submission_base.py:86] 11) loss = 0.500, grad_norm = 0.584
I0310 00:12:14.628106 140320179816192 logging_writer.py:48] [12] global_step=12, grad_norm=0.540589, loss=0.477857
I0310 00:12:14.631576 140372199180096 pytorch_submission_base.py:86] 12) loss = 0.478, grad_norm = 0.541
I0310 00:12:14.901649 140320188208896 logging_writer.py:48] [13] global_step=13, grad_norm=0.500231, loss=0.454336
I0310 00:12:14.905282 140372199180096 pytorch_submission_base.py:86] 13) loss = 0.454, grad_norm = 0.500
I0310 00:12:15.176091 140320179816192 logging_writer.py:48] [14] global_step=14, grad_norm=0.468706, loss=0.430587
I0310 00:12:15.179616 140372199180096 pytorch_submission_base.py:86] 14) loss = 0.431, grad_norm = 0.469
I0310 00:12:15.451874 140320188208896 logging_writer.py:48] [15] global_step=15, grad_norm=0.437285, loss=0.406169
I0310 00:12:15.455494 140372199180096 pytorch_submission_base.py:86] 15) loss = 0.406, grad_norm = 0.437
I0310 00:12:15.729405 140320179816192 logging_writer.py:48] [16] global_step=16, grad_norm=0.415055, loss=0.382215
I0310 00:12:15.733277 140372199180096 pytorch_submission_base.py:86] 16) loss = 0.382, grad_norm = 0.415
I0310 00:12:16.010799 140320188208896 logging_writer.py:48] [17] global_step=17, grad_norm=0.394506, loss=0.360654
I0310 00:12:16.014455 140372199180096 pytorch_submission_base.py:86] 17) loss = 0.361, grad_norm = 0.395
I0310 00:12:16.296903 140320179816192 logging_writer.py:48] [18] global_step=18, grad_norm=0.371950, loss=0.337656
I0310 00:12:16.300330 140372199180096 pytorch_submission_base.py:86] 18) loss = 0.338, grad_norm = 0.372
I0310 00:12:16.577406 140320188208896 logging_writer.py:48] [19] global_step=19, grad_norm=0.345851, loss=0.319669
I0310 00:12:16.580786 140372199180096 pytorch_submission_base.py:86] 19) loss = 0.320, grad_norm = 0.346
I0310 00:12:16.852775 140320179816192 logging_writer.py:48] [20] global_step=20, grad_norm=0.326420, loss=0.291114
I0310 00:12:16.856346 140372199180096 pytorch_submission_base.py:86] 20) loss = 0.291, grad_norm = 0.326
I0310 00:12:17.130861 140320188208896 logging_writer.py:48] [21] global_step=21, grad_norm=0.300517, loss=0.268526
I0310 00:12:17.134471 140372199180096 pytorch_submission_base.py:86] 21) loss = 0.269, grad_norm = 0.301
I0310 00:12:17.407704 140320179816192 logging_writer.py:48] [22] global_step=22, grad_norm=0.274635, loss=0.254447
I0310 00:12:17.411154 140372199180096 pytorch_submission_base.py:86] 22) loss = 0.254, grad_norm = 0.275
I0310 00:12:17.687537 140320188208896 logging_writer.py:48] [23] global_step=23, grad_norm=0.254911, loss=0.229320
I0310 00:12:17.690958 140372199180096 pytorch_submission_base.py:86] 23) loss = 0.229, grad_norm = 0.255
I0310 00:12:17.972949 140320179816192 logging_writer.py:48] [24] global_step=24, grad_norm=0.229613, loss=0.214222
I0310 00:12:17.976611 140372199180096 pytorch_submission_base.py:86] 24) loss = 0.214, grad_norm = 0.230
I0310 00:12:18.258864 140320188208896 logging_writer.py:48] [25] global_step=25, grad_norm=0.207790, loss=0.196472
I0310 00:12:18.262124 140372199180096 pytorch_submission_base.py:86] 25) loss = 0.196, grad_norm = 0.208
I0310 00:12:18.544482 140320179816192 logging_writer.py:48] [26] global_step=26, grad_norm=0.191229, loss=0.175556
I0310 00:12:18.547908 140372199180096 pytorch_submission_base.py:86] 26) loss = 0.176, grad_norm = 0.191
I0310 00:12:18.828889 140320188208896 logging_writer.py:48] [27] global_step=27, grad_norm=0.169083, loss=0.168240
I0310 00:12:18.832479 140372199180096 pytorch_submission_base.py:86] 27) loss = 0.168, grad_norm = 0.169
I0310 00:12:19.111478 140320179816192 logging_writer.py:48] [28] global_step=28, grad_norm=0.154659, loss=0.148958
I0310 00:12:19.115106 140372199180096 pytorch_submission_base.py:86] 28) loss = 0.149, grad_norm = 0.155
I0310 00:12:19.390558 140320188208896 logging_writer.py:48] [29] global_step=29, grad_norm=0.138103, loss=0.142167
I0310 00:12:19.393977 140372199180096 pytorch_submission_base.py:86] 29) loss = 0.142, grad_norm = 0.138
I0310 00:12:19.670682 140320179816192 logging_writer.py:48] [30] global_step=30, grad_norm=0.123692, loss=0.130779
I0310 00:12:19.674216 140372199180096 pytorch_submission_base.py:86] 30) loss = 0.131, grad_norm = 0.124
I0310 00:12:19.947830 140320188208896 logging_writer.py:48] [31] global_step=31, grad_norm=0.111039, loss=0.114896
I0310 00:12:19.951316 140372199180096 pytorch_submission_base.py:86] 31) loss = 0.115, grad_norm = 0.111
I0310 00:12:20.243663 140320179816192 logging_writer.py:48] [32] global_step=32, grad_norm=0.101005, loss=0.115293
I0310 00:12:20.247282 140372199180096 pytorch_submission_base.py:86] 32) loss = 0.115, grad_norm = 0.101
I0310 00:12:20.527140 140320188208896 logging_writer.py:48] [33] global_step=33, grad_norm=0.090409, loss=0.102730
I0310 00:12:20.530746 140372199180096 pytorch_submission_base.py:86] 33) loss = 0.103, grad_norm = 0.090
I0310 00:12:20.807330 140320179816192 logging_writer.py:48] [34] global_step=34, grad_norm=0.079549, loss=0.101426
I0310 00:12:20.810545 140372199180096 pytorch_submission_base.py:86] 34) loss = 0.101, grad_norm = 0.080
I0310 00:12:21.088624 140320188208896 logging_writer.py:48] [35] global_step=35, grad_norm=0.071492, loss=0.091935
I0310 00:12:21.092248 140372199180096 pytorch_submission_base.py:86] 35) loss = 0.092, grad_norm = 0.071
I0310 00:12:21.367215 140320179816192 logging_writer.py:48] [36] global_step=36, grad_norm=0.068323, loss=0.089398
I0310 00:12:21.370905 140372199180096 pytorch_submission_base.py:86] 36) loss = 0.089, grad_norm = 0.068
I0310 00:12:21.649265 140320188208896 logging_writer.py:48] [37] global_step=37, grad_norm=0.058689, loss=0.086206
I0310 00:12:21.652769 140372199180096 pytorch_submission_base.py:86] 37) loss = 0.086, grad_norm = 0.059
I0310 00:12:21.935744 140320179816192 logging_writer.py:48] [38] global_step=38, grad_norm=0.057537, loss=0.077616
I0310 00:12:21.939332 140372199180096 pytorch_submission_base.py:86] 38) loss = 0.078, grad_norm = 0.058
I0310 00:12:22.222698 140320188208896 logging_writer.py:48] [39] global_step=39, grad_norm=0.048786, loss=0.081599
I0310 00:12:22.226302 140372199180096 pytorch_submission_base.py:86] 39) loss = 0.082, grad_norm = 0.049
I0310 00:12:22.500121 140320179816192 logging_writer.py:48] [40] global_step=40, grad_norm=0.044575, loss=0.080158
I0310 00:12:22.503561 140372199180096 pytorch_submission_base.py:86] 40) loss = 0.080, grad_norm = 0.045
I0310 00:12:22.775431 140320188208896 logging_writer.py:48] [41] global_step=41, grad_norm=0.042207, loss=0.072992
I0310 00:12:22.778791 140372199180096 pytorch_submission_base.py:86] 41) loss = 0.073, grad_norm = 0.042
I0310 00:12:23.052715 140320179816192 logging_writer.py:48] [42] global_step=42, grad_norm=0.037725, loss=0.076176
I0310 00:12:23.056666 140372199180096 pytorch_submission_base.py:86] 42) loss = 0.076, grad_norm = 0.038
I0310 00:12:23.334058 140320188208896 logging_writer.py:48] [43] global_step=43, grad_norm=0.033807, loss=0.065012
I0310 00:12:23.337535 140372199180096 pytorch_submission_base.py:86] 43) loss = 0.065, grad_norm = 0.034
I0310 00:12:23.612449 140320179816192 logging_writer.py:48] [44] global_step=44, grad_norm=0.031580, loss=0.066572
I0310 00:12:23.616110 140372199180096 pytorch_submission_base.py:86] 44) loss = 0.067, grad_norm = 0.032
I0310 00:12:23.893724 140320188208896 logging_writer.py:48] [45] global_step=45, grad_norm=0.033387, loss=0.075376
I0310 00:12:23.897296 140372199180096 pytorch_submission_base.py:86] 45) loss = 0.075, grad_norm = 0.033
I0310 00:12:24.176135 140320179816192 logging_writer.py:48] [46] global_step=46, grad_norm=0.027701, loss=0.062496
I0310 00:12:24.180131 140372199180096 pytorch_submission_base.py:86] 46) loss = 0.062, grad_norm = 0.028
I0310 00:12:24.457791 140320188208896 logging_writer.py:48] [47] global_step=47, grad_norm=0.031003, loss=0.070770
I0310 00:12:24.461376 140372199180096 pytorch_submission_base.py:86] 47) loss = 0.071, grad_norm = 0.031
I0310 00:12:24.743412 140320179816192 logging_writer.py:48] [48] global_step=48, grad_norm=0.029026, loss=0.064185
I0310 00:12:24.746880 140372199180096 pytorch_submission_base.py:86] 48) loss = 0.064, grad_norm = 0.029
I0310 00:12:25.024211 140320188208896 logging_writer.py:48] [49] global_step=49, grad_norm=0.023449, loss=0.056259
I0310 00:12:25.027728 140372199180096 pytorch_submission_base.py:86] 49) loss = 0.056, grad_norm = 0.023
I0310 00:12:25.302728 140320179816192 logging_writer.py:48] [50] global_step=50, grad_norm=0.028481, loss=0.067175
I0310 00:12:25.306265 140372199180096 pytorch_submission_base.py:86] 50) loss = 0.067, grad_norm = 0.028
I0310 00:12:25.582358 140320188208896 logging_writer.py:48] [51] global_step=51, grad_norm=0.024495, loss=0.065741
I0310 00:12:25.586203 140372199180096 pytorch_submission_base.py:86] 51) loss = 0.066, grad_norm = 0.024
I0310 00:12:25.861382 140320179816192 logging_writer.py:48] [52] global_step=52, grad_norm=0.024135, loss=0.065369
I0310 00:12:25.865029 140372199180096 pytorch_submission_base.py:86] 52) loss = 0.065, grad_norm = 0.024
I0310 00:12:26.144202 140320188208896 logging_writer.py:48] [53] global_step=53, grad_norm=0.020017, loss=0.055125
I0310 00:12:26.147683 140372199180096 pytorch_submission_base.py:86] 53) loss = 0.055, grad_norm = 0.020
I0310 00:12:26.428486 140320179816192 logging_writer.py:48] [54] global_step=54, grad_norm=0.023128, loss=0.062684
I0310 00:12:26.431994 140372199180096 pytorch_submission_base.py:86] 54) loss = 0.063, grad_norm = 0.023
I0310 00:12:26.706089 140320188208896 logging_writer.py:48] [55] global_step=55, grad_norm=0.022149, loss=0.060161
I0310 00:12:26.709484 140372199180096 pytorch_submission_base.py:86] 55) loss = 0.060, grad_norm = 0.022
I0310 00:12:26.987272 140320179816192 logging_writer.py:48] [56] global_step=56, grad_norm=0.022907, loss=0.067771
I0310 00:12:26.990624 140372199180096 pytorch_submission_base.py:86] 56) loss = 0.068, grad_norm = 0.023
I0310 00:12:27.267284 140320188208896 logging_writer.py:48] [57] global_step=57, grad_norm=0.019241, loss=0.059168
I0310 00:12:27.271206 140372199180096 pytorch_submission_base.py:86] 57) loss = 0.059, grad_norm = 0.019
I0310 00:12:27.544307 140320179816192 logging_writer.py:48] [58] global_step=58, grad_norm=0.024783, loss=0.071710
I0310 00:12:27.547808 140372199180096 pytorch_submission_base.py:86] 58) loss = 0.072, grad_norm = 0.025
I0310 00:12:27.825948 140320188208896 logging_writer.py:48] [59] global_step=59, grad_norm=0.023847, loss=0.065248
I0310 00:12:27.829424 140372199180096 pytorch_submission_base.py:86] 59) loss = 0.065, grad_norm = 0.024
I0310 00:12:28.104363 140320179816192 logging_writer.py:48] [60] global_step=60, grad_norm=0.021377, loss=0.065171
I0310 00:12:28.107772 140372199180096 pytorch_submission_base.py:86] 60) loss = 0.065, grad_norm = 0.021
I0310 00:12:28.386194 140320188208896 logging_writer.py:48] [61] global_step=61, grad_norm=0.022562, loss=0.067556
I0310 00:12:28.389698 140372199180096 pytorch_submission_base.py:86] 61) loss = 0.068, grad_norm = 0.023
I0310 00:12:28.669506 140320179816192 logging_writer.py:48] [62] global_step=62, grad_norm=0.025928, loss=0.068238
I0310 00:12:28.672986 140372199180096 pytorch_submission_base.py:86] 62) loss = 0.068, grad_norm = 0.026
I0310 00:12:28.947543 140320188208896 logging_writer.py:48] [63] global_step=63, grad_norm=0.018461, loss=0.055683
I0310 00:12:28.950954 140372199180096 pytorch_submission_base.py:86] 63) loss = 0.056, grad_norm = 0.018
I0310 00:12:29.227515 140320179816192 logging_writer.py:48] [64] global_step=64, grad_norm=0.022093, loss=0.062755
I0310 00:12:29.231389 140372199180096 pytorch_submission_base.py:86] 64) loss = 0.063, grad_norm = 0.022
I0310 00:12:29.506426 140320188208896 logging_writer.py:48] [65] global_step=65, grad_norm=0.020378, loss=0.059097
I0310 00:12:29.509892 140372199180096 pytorch_submission_base.py:86] 65) loss = 0.059, grad_norm = 0.020
I0310 00:12:29.786519 140320179816192 logging_writer.py:48] [66] global_step=66, grad_norm=0.021011, loss=0.064623
I0310 00:12:29.789900 140372199180096 pytorch_submission_base.py:86] 66) loss = 0.065, grad_norm = 0.021
I0310 00:12:30.066004 140320188208896 logging_writer.py:48] [67] global_step=67, grad_norm=0.017328, loss=0.056627
I0310 00:12:30.069241 140372199180096 pytorch_submission_base.py:86] 67) loss = 0.057, grad_norm = 0.017
I0310 00:12:30.348517 140320179816192 logging_writer.py:48] [68] global_step=68, grad_norm=0.021760, loss=0.060991
I0310 00:12:30.351908 140372199180096 pytorch_submission_base.py:86] 68) loss = 0.061, grad_norm = 0.022
I0310 00:12:30.632781 140320188208896 logging_writer.py:48] [69] global_step=69, grad_norm=0.023860, loss=0.070173
I0310 00:12:30.636453 140372199180096 pytorch_submission_base.py:86] 69) loss = 0.070, grad_norm = 0.024
I0310 00:12:30.913606 140320179816192 logging_writer.py:48] [70] global_step=70, grad_norm=0.020920, loss=0.068919
I0310 00:12:30.917085 140372199180096 pytorch_submission_base.py:86] 70) loss = 0.069, grad_norm = 0.021
I0310 00:12:31.194362 140320188208896 logging_writer.py:48] [71] global_step=71, grad_norm=0.019490, loss=0.062423
I0310 00:12:31.197811 140372199180096 pytorch_submission_base.py:86] 71) loss = 0.062, grad_norm = 0.019
I0310 00:12:31.475911 140320179816192 logging_writer.py:48] [72] global_step=72, grad_norm=0.019416, loss=0.061932
I0310 00:12:31.479289 140372199180096 pytorch_submission_base.py:86] 72) loss = 0.062, grad_norm = 0.019
I0310 00:12:31.754585 140320188208896 logging_writer.py:48] [73] global_step=73, grad_norm=0.021079, loss=0.067756
I0310 00:12:31.758066 140372199180096 pytorch_submission_base.py:86] 73) loss = 0.068, grad_norm = 0.021
I0310 00:12:32.032882 140320179816192 logging_writer.py:48] [74] global_step=74, grad_norm=0.017852, loss=0.061898
I0310 00:12:32.036625 140372199180096 pytorch_submission_base.py:86] 74) loss = 0.062, grad_norm = 0.018
I0310 00:12:32.312325 140320188208896 logging_writer.py:48] [75] global_step=75, grad_norm=0.021233, loss=0.056924
I0310 00:12:32.315825 140372199180096 pytorch_submission_base.py:86] 75) loss = 0.057, grad_norm = 0.021
I0310 00:12:32.590364 140320179816192 logging_writer.py:48] [76] global_step=76, grad_norm=0.017911, loss=0.061542
I0310 00:12:32.593738 140372199180096 pytorch_submission_base.py:86] 76) loss = 0.062, grad_norm = 0.018
I0310 00:12:32.872823 140320188208896 logging_writer.py:48] [77] global_step=77, grad_norm=0.021969, loss=0.070482
I0310 00:12:32.876491 140372199180096 pytorch_submission_base.py:86] 77) loss = 0.070, grad_norm = 0.022
I0310 00:12:33.149379 140320179816192 logging_writer.py:48] [78] global_step=78, grad_norm=0.019322, loss=0.066207
I0310 00:12:33.152887 140372199180096 pytorch_submission_base.py:86] 78) loss = 0.066, grad_norm = 0.019
I0310 00:12:33.431532 140320188208896 logging_writer.py:48] [79] global_step=79, grad_norm=0.017679, loss=0.059356
I0310 00:12:33.435022 140372199180096 pytorch_submission_base.py:86] 79) loss = 0.059, grad_norm = 0.018
I0310 00:12:33.706858 140320179816192 logging_writer.py:48] [80] global_step=80, grad_norm=0.019700, loss=0.057435
I0310 00:12:33.710190 140372199180096 pytorch_submission_base.py:86] 80) loss = 0.057, grad_norm = 0.020
I0310 00:12:33.987471 140320188208896 logging_writer.py:48] [81] global_step=81, grad_norm=0.019016, loss=0.055935
I0310 00:12:33.990884 140372199180096 pytorch_submission_base.py:86] 81) loss = 0.056, grad_norm = 0.019
I0310 00:12:34.265095 140320179816192 logging_writer.py:48] [82] global_step=82, grad_norm=0.019992, loss=0.067746
I0310 00:12:34.268514 140372199180096 pytorch_submission_base.py:86] 82) loss = 0.068, grad_norm = 0.020
I0310 00:12:34.543680 140320188208896 logging_writer.py:48] [83] global_step=83, grad_norm=0.017054, loss=0.061264
I0310 00:12:34.547123 140372199180096 pytorch_submission_base.py:86] 83) loss = 0.061, grad_norm = 0.017
I0310 00:12:34.826093 140320179816192 logging_writer.py:48] [84] global_step=84, grad_norm=0.020001, loss=0.066733
I0310 00:12:34.829413 140372199180096 pytorch_submission_base.py:86] 84) loss = 0.067, grad_norm = 0.020
I0310 00:12:35.111749 140320188208896 logging_writer.py:48] [85] global_step=85, grad_norm=0.013682, loss=0.058567
I0310 00:12:35.115214 140372199180096 pytorch_submission_base.py:86] 85) loss = 0.059, grad_norm = 0.014
I0310 00:12:35.400923 140320179816192 logging_writer.py:48] [86] global_step=86, grad_norm=0.019281, loss=0.066463
I0310 00:12:35.404164 140372199180096 pytorch_submission_base.py:86] 86) loss = 0.066, grad_norm = 0.019
I0310 00:12:35.683519 140320188208896 logging_writer.py:48] [87] global_step=87, grad_norm=0.015003, loss=0.053182
I0310 00:12:35.687156 140372199180096 pytorch_submission_base.py:86] 87) loss = 0.053, grad_norm = 0.015
I0310 00:12:35.967750 140320179816192 logging_writer.py:48] [88] global_step=88, grad_norm=0.015732, loss=0.057591
I0310 00:12:35.971106 140372199180096 pytorch_submission_base.py:86] 88) loss = 0.058, grad_norm = 0.016
I0310 00:12:36.245137 140320188208896 logging_writer.py:48] [89] global_step=89, grad_norm=0.016754, loss=0.062773
I0310 00:12:36.248580 140372199180096 pytorch_submission_base.py:86] 89) loss = 0.063, grad_norm = 0.017
I0310 00:12:36.524065 140320179816192 logging_writer.py:48] [90] global_step=90, grad_norm=0.018335, loss=0.054348
I0310 00:12:36.527570 140372199180096 pytorch_submission_base.py:86] 90) loss = 0.054, grad_norm = 0.018
I0310 00:12:36.803945 140320188208896 logging_writer.py:48] [91] global_step=91, grad_norm=0.016006, loss=0.062853
I0310 00:12:36.807504 140372199180096 pytorch_submission_base.py:86] 91) loss = 0.063, grad_norm = 0.016
I0310 00:12:37.080692 140320179816192 logging_writer.py:48] [92] global_step=92, grad_norm=0.015733, loss=0.061705
I0310 00:12:37.084245 140372199180096 pytorch_submission_base.py:86] 92) loss = 0.062, grad_norm = 0.016
I0310 00:12:37.356892 140320188208896 logging_writer.py:48] [93] global_step=93, grad_norm=0.015981, loss=0.061912
I0310 00:12:37.360672 140372199180096 pytorch_submission_base.py:86] 93) loss = 0.062, grad_norm = 0.016
I0310 00:12:37.641074 140320179816192 logging_writer.py:48] [94] global_step=94, grad_norm=0.015667, loss=0.053092
I0310 00:12:37.644267 140372199180096 pytorch_submission_base.py:86] 94) loss = 0.053, grad_norm = 0.016
I0310 00:12:37.930518 140320188208896 logging_writer.py:48] [95] global_step=95, grad_norm=0.015503, loss=0.062820
I0310 00:12:37.934427 140372199180096 pytorch_submission_base.py:86] 95) loss = 0.063, grad_norm = 0.016
I0310 00:12:38.216758 140320179816192 logging_writer.py:48] [96] global_step=96, grad_norm=0.016226, loss=0.066009
I0310 00:12:38.220146 140372199180096 pytorch_submission_base.py:86] 96) loss = 0.066, grad_norm = 0.016
I0310 00:12:38.498274 140320188208896 logging_writer.py:48] [97] global_step=97, grad_norm=0.014417, loss=0.055468
I0310 00:12:38.501815 140372199180096 pytorch_submission_base.py:86] 97) loss = 0.055, grad_norm = 0.014
I0310 00:12:38.783131 140320179816192 logging_writer.py:48] [98] global_step=98, grad_norm=0.013492, loss=0.061205
I0310 00:12:38.786660 140372199180096 pytorch_submission_base.py:86] 98) loss = 0.061, grad_norm = 0.013
I0310 00:12:39.064244 140320188208896 logging_writer.py:48] [99] global_step=99, grad_norm=0.012842, loss=0.058772
I0310 00:12:39.067740 140372199180096 pytorch_submission_base.py:86] 99) loss = 0.059, grad_norm = 0.013
I0310 00:12:39.340713 140320179816192 logging_writer.py:48] [100] global_step=100, grad_norm=0.013255, loss=0.059831
I0310 00:12:39.344227 140372199180096 pytorch_submission_base.py:86] 100) loss = 0.060, grad_norm = 0.013
I0310 00:14:29.190940 140320188208896 logging_writer.py:48] [500] global_step=500, grad_norm=0.008387, loss=0.051591
I0310 00:14:29.194779 140372199180096 pytorch_submission_base.py:86] 500) loss = 0.052, grad_norm = 0.008
I0310 00:16:11.506617 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:16:26.333538 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.490889 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.491854 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.494720 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.494819 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.494907 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.495574 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:26.495643 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.255771 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.400751 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.403396 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.404294 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.404784 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.405526 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.405675 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:16:41.405692 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:17:05.491304 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:17:05.826231 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.989186 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.990498 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.993873 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.993957 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.994034 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.994242 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:05.994299 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.157620 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.307127 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.308547 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.310393 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.310549 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.310895 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.311722 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:06.311733 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:17:08.602203 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:17:08.908686 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.056705 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.058147 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.061943 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.062489 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.062883 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.063551 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.063604 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.232514 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.383586 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.383897 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.387301 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.387433 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.387439 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.387558 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:17:09.388232 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:17:11.605604 140372199180096 submission_runner.py:363] Time since start: 386.10s, 	Step: 876, 	{'train/accuracy': 0.9865373467754223, 'train/loss': 0.056160181760787964, 'train/mean_average_precision': 0.028723859137621856, 'validation/accuracy': 0.984117976109578, 'validation/loss': 0.06509634107351303, 'validation/mean_average_precision': 0.02929909083188226, 'validation/num_examples': 43793, 'test/accuracy': 0.983142103926419, 'test/loss': 0.06847210228443146, 'test/mean_average_precision': 0.031110032448114024, 'test/num_examples': 43793}
I0310 00:17:11.614399 140320179816192 logging_writer.py:48] [876] global_step=876, preemption_count=0, score=244.376425, test/accuracy=0.983142, test/loss=0.068472, test/mean_average_precision=0.031110, test/num_examples=43793, total_duration=386.103210, train/accuracy=0.986537, train/loss=0.056160, train/mean_average_precision=0.028724, validation/accuracy=0.984118, validation/loss=0.065096, validation/mean_average_precision=0.029299, validation/num_examples=43793
I0310 00:17:11.673496 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_876.
I0310 00:17:46.012665 140320188208896 logging_writer.py:48] [1000] global_step=1000, grad_norm=0.010955, loss=0.062667
I0310 00:17:46.016740 140372199180096 pytorch_submission_base.py:86] 1000) loss = 0.063, grad_norm = 0.011
I0310 00:20:02.376362 140320179816192 logging_writer.py:48] [1500] global_step=1500, grad_norm=0.009298, loss=0.055264
I0310 00:20:02.380753 140372199180096 pytorch_submission_base.py:86] 1500) loss = 0.055, grad_norm = 0.009
I0310 00:21:11.757686 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:21:26.953507 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.102672 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.103675 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.105189 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.105517 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.106184 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.106204 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:27.106731 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.708342 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.855163 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.856284 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.858137 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.858905 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.859006 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.860142 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:21:41.860775 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:22:06.577403 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:22:06.867708 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.027181 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.029057 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.032300 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.032686 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.032913 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.033044 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.033186 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.163802 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.328202 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.331294 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.332531 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.332778 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.333300 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.333406 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:07.333831 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:22:09.711204 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:22:09.995355 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.155404 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.158001 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.161027 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.161503 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.161787 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.162093 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.162212 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.292635 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.452469 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.454086 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.456567 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.456600 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.456619 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.456880 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:22:10.457319 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:22:12.783268 140372199180096 submission_runner.py:363] Time since start: 686.35s, 	Step: 1758, 	{'train/accuracy': 0.9869110858692461, 'train/loss': 0.05378514528274536, 'train/mean_average_precision': 0.035033351772077795, 'validation/accuracy': 0.9841175701688795, 'validation/loss': 0.06344803422689438, 'validation/mean_average_precision': 0.039269100774430715, 'validation/num_examples': 43793, 'test/accuracy': 0.9831143050772071, 'test/loss': 0.06653417646884918, 'test/mean_average_precision': 0.0405116824387689, 'test/num_examples': 43793}
I0310 00:22:12.791951 140320188208896 logging_writer.py:48] [1758] global_step=1758, preemption_count=0, score=483.323985, test/accuracy=0.983114, test/loss=0.066534, test/mean_average_precision=0.040512, test/num_examples=43793, total_duration=686.354286, train/accuracy=0.986911, train/loss=0.053785, train/mean_average_precision=0.035033, validation/accuracy=0.984118, validation/loss=0.063448, validation/mean_average_precision=0.039269, validation/num_examples=43793
I0310 00:22:12.848060 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_1758.
I0310 00:23:19.879451 140320179816192 logging_writer.py:48] [2000] global_step=2000, grad_norm=0.017297, loss=0.055332
I0310 00:23:19.883864 140372199180096 pytorch_submission_base.py:86] 2000) loss = 0.055, grad_norm = 0.017
I0310 00:25:37.811848 140320188208896 logging_writer.py:48] [2500] global_step=2500, grad_norm=0.012020, loss=0.050216
I0310 00:25:37.815418 140372199180096 pytorch_submission_base.py:86] 2500) loss = 0.050, grad_norm = 0.012
I0310 00:26:13.112725 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:26:28.255006 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.407075 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.408289 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.410544 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.411549 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.411618 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.411851 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:28.411979 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.554609 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.696534 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.698968 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.700606 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.700809 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.700811 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.700855 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:26:43.702160 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:27:08.510771 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:27:08.793804 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.953969 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.956505 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.957504 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.958375 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.958897 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.958956 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:08.959097 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.089597 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.248762 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.252105 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.254272 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.254958 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.254997 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.255058 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:09.256641 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:27:11.562077 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:27:11.846002 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.000755 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.002825 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.005228 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.006013 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.006894 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.007028 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.007345 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.142174 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.302003 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.303771 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.306949 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.307068 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.307117 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.307119 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:27:12.307147 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:27:14.563117 140372199180096 submission_runner.py:363] Time since start: 987.71s, 	Step: 2630, 	{'train/accuracy': 0.9866648915931626, 'train/loss': 0.051761284470558167, 'train/mean_average_precision': 0.05331550836765982, 'validation/accuracy': 0.9841378672038074, 'validation/loss': 0.06115926429629326, 'validation/mean_average_precision': 0.05149901313025025, 'validation/num_examples': 43793, 'test/accuracy': 0.9831517914041746, 'test/loss': 0.06447770446538925, 'test/mean_average_precision': 0.05253406210917031, 'test/num_examples': 43793}
I0310 00:27:14.572351 140320179816192 logging_writer.py:48] [2630] global_step=2630, preemption_count=0, score=722.497330, test/accuracy=0.983152, test/loss=0.064478, test/mean_average_precision=0.052534, test/num_examples=43793, total_duration=987.709318, train/accuracy=0.986665, train/loss=0.051761, train/mean_average_precision=0.053316, validation/accuracy=0.984138, validation/loss=0.061159, validation/mean_average_precision=0.051499, validation/num_examples=43793
I0310 00:27:14.632956 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_2630.
I0310 00:28:58.082584 140320188208896 logging_writer.py:48] [3000] global_step=3000, grad_norm=0.016626, loss=0.050051
I0310 00:28:58.086916 140372199180096 pytorch_submission_base.py:86] 3000) loss = 0.050, grad_norm = 0.017
I0310 00:31:14.652545 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:31:30.221709 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.367355 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.370477 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.372416 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.372515 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.373588 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.373646 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:30.373863 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.634452 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.782465 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.784579 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.788105 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.788108 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.788253 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.788871 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:31:45.789301 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:32:10.868391 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:32:11.158082 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.321107 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.323770 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.325635 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.326199 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.326601 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.326678 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.326953 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.456886 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.612277 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.614770 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.616741 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.616757 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.617245 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.617952 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:11.618004 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:32:13.876178 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:32:14.188342 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.345431 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.348194 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.350062 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.350610 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.351280 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.351454 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.351726 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.482368 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.638025 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.642208 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.642273 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.643227 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.643225 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.643479 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:32:14.643515 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:32:16.939558 140372199180096 submission_runner.py:363] Time since start: 1289.25s, 	Step: 3495, 	{'train/accuracy': 0.9872166801721357, 'train/loss': 0.04780132696032524, 'train/mean_average_precision': 0.08339221455760047, 'validation/accuracy': 0.9843948276659953, 'validation/loss': 0.05705229192972183, 'validation/mean_average_precision': 0.08661681434173359, 'validation/num_examples': 43793, 'test/accuracy': 0.9833969267108612, 'test/loss': 0.060351449996232986, 'test/mean_average_precision': 0.08532997742554242, 'test/num_examples': 43793}
I0310 00:32:16.948843 140320179816192 logging_writer.py:48] [3495] global_step=3495, preemption_count=0, score=961.434376, test/accuracy=0.983397, test/loss=0.060351, test/mean_average_precision=0.085330, test/num_examples=43793, total_duration=1289.249162, train/accuracy=0.987217, train/loss=0.047801, train/mean_average_precision=0.083392, validation/accuracy=0.984395, validation/loss=0.057052, validation/mean_average_precision=0.086617, validation/num_examples=43793
I0310 00:32:17.007288 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_3495.
I0310 00:32:18.633139 140320188208896 logging_writer.py:48] [3500] global_step=3500, grad_norm=0.020925, loss=0.049369
I0310 00:32:18.636808 140372199180096 pytorch_submission_base.py:86] 3500) loss = 0.049, grad_norm = 0.021
I0310 00:34:34.934449 140320179816192 logging_writer.py:48] [4000] global_step=4000, grad_norm=0.027688, loss=0.050065
I0310 00:34:34.938389 140372199180096 pytorch_submission_base.py:86] 4000) loss = 0.050, grad_norm = 0.028
I0310 00:36:17.024888 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:36:32.029652 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.212922 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.214218 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.215885 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.216122 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.216671 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.216798 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:32.217330 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.025091 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.174051 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.175938 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.177564 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.178181 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.178379 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.178534 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:36:47.178547 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:37:11.572213 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:37:11.859732 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.056301 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.058236 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.060519 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.060749 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.060776 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.060804 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.062199 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.191389 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.346807 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.349780 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.351886 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.352257 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.352316 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.352792 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:12.353255 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:37:14.731515 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:37:15.021942 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.215955 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.218132 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.220428 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.220460 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.221281 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.221352 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.221394 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.351778 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.515367 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.517495 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.519602 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.519957 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.520370 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.520617 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:37:15.520665 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:37:17.792479 140372199180096 submission_runner.py:363] Time since start: 1591.62s, 	Step: 4377, 	{'train/accuracy': 0.9877382796431193, 'train/loss': 0.04441026225686073, 'train/mean_average_precision': 0.11838754855360187, 'validation/accuracy': 0.9848734317495963, 'validation/loss': 0.05408042296767235, 'validation/mean_average_precision': 0.11406018138181306, 'validation/num_examples': 43793, 'test/accuracy': 0.9838783522358489, 'test/loss': 0.05691579356789589, 'test/mean_average_precision': 0.11410809040020607, 'test/num_examples': 43793}
I0310 00:37:17.801767 140320188208896 logging_writer.py:48] [4377] global_step=4377, preemption_count=0, score=1200.320096, test/accuracy=0.983878, test/loss=0.056916, test/mean_average_precision=0.114108, test/num_examples=43793, total_duration=1591.621511, train/accuracy=0.987738, train/loss=0.044410, train/mean_average_precision=0.118388, validation/accuracy=0.984873, validation/loss=0.054080, validation/mean_average_precision=0.114060, validation/num_examples=43793
I0310 00:37:17.858298 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_4377.
I0310 00:37:52.742958 140320179816192 logging_writer.py:48] [4500] global_step=4500, grad_norm=0.016224, loss=0.042839
I0310 00:37:52.746701 140372199180096 pytorch_submission_base.py:86] 4500) loss = 0.043, grad_norm = 0.016
I0310 00:40:08.588638 140320188208896 logging_writer.py:48] [5000] global_step=5000, grad_norm=0.016538, loss=0.048388
I0310 00:40:08.592847 140372199180096 pytorch_submission_base.py:86] 5000) loss = 0.048, grad_norm = 0.017
I0310 00:41:18.063177 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:41:33.137467 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.260055 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.260604 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.265305 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.265352 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.265743 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.265847 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:33.266117 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.086331 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.208865 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.209705 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.212969 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.214095 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.214297 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.214318 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:41:48.214585 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:42:13.146095 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:42:13.431522 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.570477 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.572439 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.576192 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.577304 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.577487 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.577829 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.578119 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.724118 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.856340 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.857349 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.861660 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.862071 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.862099 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.862550 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:13.862627 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:42:16.143358 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:42:16.433488 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.565033 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.565480 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.571189 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.572337 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.572444 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.572736 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.572955 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.729894 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.860775 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.862028 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.866194 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.866433 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.866962 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.867057 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:42:16.868061 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:42:19.116625 140372199180096 submission_runner.py:363] Time since start: 1892.66s, 	Step: 5255, 	{'train/accuracy': 0.9877959923195607, 'train/loss': 0.042978763580322266, 'train/mean_average_precision': 0.14064050322779786, 'validation/accuracy': 0.9851474417211236, 'validation/loss': 0.0517478808760643, 'validation/mean_average_precision': 0.13973242177516815, 'validation/num_examples': 43793, 'test/accuracy': 0.9842073052848561, 'test/loss': 0.0545126236975193, 'test/mean_average_precision': 0.13892683145846932, 'test/num_examples': 43793}
I0310 00:42:19.126234 140320179816192 logging_writer.py:48] [5255] global_step=5255, preemption_count=0, score=1439.421045, test/accuracy=0.984207, test/loss=0.054513, test/mean_average_precision=0.138927, test/num_examples=43793, total_duration=1892.659786, train/accuracy=0.987796, train/loss=0.042979, train/mean_average_precision=0.140641, validation/accuracy=0.985147, validation/loss=0.051748, validation/mean_average_precision=0.139732, validation/num_examples=43793
I0310 00:42:19.186117 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_5255.
I0310 00:43:26.827100 140320188208896 logging_writer.py:48] [5500] global_step=5500, grad_norm=0.028609, loss=0.043309
I0310 00:43:26.833362 140372199180096 pytorch_submission_base.py:86] 5500) loss = 0.043, grad_norm = 0.029
I0310 00:45:42.386988 140320179816192 logging_writer.py:48] [6000] global_step=6000, grad_norm=0.030987, loss=0.044318
I0310 00:45:42.391448 140372199180096 pytorch_submission_base.py:86] 6000) loss = 0.044, grad_norm = 0.031
I0310 00:46:19.513754 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:46:34.438776 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.555687 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.556835 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.560724 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.561040 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.561545 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.561657 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:34.561757 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.427821 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.543593 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.545472 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.547026 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.547472 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.548055 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.548842 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:46:49.548850 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:47:15.028148 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:47:15.312251 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.451163 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.452073 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.457087 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.458395 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.458429 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.458966 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.459110 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.602211 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.735816 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.737274 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.740103 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.740261 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.740916 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.741057 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:15.741114 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:47:18.027548 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:47:18.309565 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.445905 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.447536 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.452609 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.453263 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.453351 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.453380 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.453716 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.598591 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.729494 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.732723 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.734946 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.734961 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.734977 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.735795 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:47:18.736798 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:47:20.955061 140372199180096 submission_runner.py:363] Time since start: 2194.11s, 	Step: 6138, 	{'train/accuracy': 0.9879936118759708, 'train/loss': 0.04157542809844017, 'train/mean_average_precision': 0.16764603032915903, 'validation/accuracy': 0.9853792338600008, 'validation/loss': 0.05048218369483948, 'validation/mean_average_precision': 0.15735016972184812, 'validation/num_examples': 43793, 'test/accuracy': 0.9844515982021727, 'test/loss': 0.05315732583403587, 'test/mean_average_precision': 0.1543258425548118, 'test/num_examples': 43793}
I0310 00:47:20.964520 140320188208896 logging_writer.py:48] [6138] global_step=6138, preemption_count=0, score=1678.548213, test/accuracy=0.984452, test/loss=0.053157, test/mean_average_precision=0.154326, test/num_examples=43793, total_duration=2194.110393, train/accuracy=0.987994, train/loss=0.041575, train/mean_average_precision=0.167646, validation/accuracy=0.985379, validation/loss=0.050482, validation/mean_average_precision=0.157350, validation/num_examples=43793
I0310 00:47:21.022277 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_6138.
I0310 00:49:00.129234 140320179816192 logging_writer.py:48] [6500] global_step=6500, grad_norm=0.021111, loss=0.048056
I0310 00:49:00.134835 140372199180096 pytorch_submission_base.py:86] 6500) loss = 0.048, grad_norm = 0.021
I0310 00:51:14.147092 140320188208896 logging_writer.py:48] [7000] global_step=7000, grad_norm=0.019162, loss=0.044594
I0310 00:51:14.151426 140372199180096 pytorch_submission_base.py:86] 7000) loss = 0.045, grad_norm = 0.019
I0310 00:51:21.275247 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:51:36.275925 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.392169 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.392758 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.396374 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.396494 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.396686 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.397090 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:36.397373 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.723449 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.840420 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.841078 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.845107 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.845505 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.845866 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.846150 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:51:50.846434 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:52:15.828563 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:52:16.118279 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.254559 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.260581 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.261020 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.261690 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.262250 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.265887 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.266777 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.416183 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.549316 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.549839 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.553390 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.554359 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.554434 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.554499 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:16.554701 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:52:18.816066 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:52:19.111346 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.245878 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.246889 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.253112 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.253146 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.253237 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.253254 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.253387 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.403340 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.541673 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.541802 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.546432 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.546931 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.547027 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.547100 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:52:19.547177 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:52:21.774114 140372199180096 submission_runner.py:363] Time since start: 2495.87s, 	Step: 7028, 	{'train/accuracy': 0.9886263541399571, 'train/loss': 0.039400722831487656, 'train/mean_average_precision': 0.1957593910631516, 'validation/accuracy': 0.9856999270118624, 'validation/loss': 0.048959314823150635, 'validation/mean_average_precision': 0.18294585380256653, 'validation/num_examples': 43793, 'test/accuracy': 0.9847586491275584, 'test/loss': 0.051604047417640686, 'test/mean_average_precision': 0.17963427922131012, 'test/num_examples': 43793}
I0310 00:52:21.783420 140320179816192 logging_writer.py:48] [7028] global_step=7028, preemption_count=0, score=1917.664666, test/accuracy=0.984759, test/loss=0.051604, test/mean_average_precision=0.179634, test/num_examples=43793, total_duration=2495.871860, train/accuracy=0.988626, train/loss=0.039401, train/mean_average_precision=0.195759, validation/accuracy=0.985700, validation/loss=0.048959, validation/mean_average_precision=0.182946, validation/num_examples=43793
I0310 00:52:21.848924 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_7028.
I0310 00:54:28.650553 140320188208896 logging_writer.py:48] [7500] global_step=7500, grad_norm=0.020618, loss=0.044332
I0310 00:54:28.654707 140372199180096 pytorch_submission_base.py:86] 7500) loss = 0.044, grad_norm = 0.021
I0310 00:56:21.863667 140372199180096 spec.py:298] Evaluating on the training split.
W0310 00:56:36.358470 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.484452 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.485612 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.490196 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.490308 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.490426 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.490580 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:36.490889 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.161959 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.276780 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.277424 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.282057 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.282363 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.282719 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.282936 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:56:51.283416 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:57:17.140938 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 00:57:17.424280 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.555549 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.556725 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.561967 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.562202 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.563287 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.563295 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.563333 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.709222 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.841650 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.843025 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.845965 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.846185 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.846525 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.847206 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:17.847297 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:57:20.093769 140372199180096 spec.py:326] Evaluating on the test split.
W0310 00:57:20.381277 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.517006 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.519158 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.524181 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.524611 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.524700 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.525092 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.525419 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.670719 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.798440 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.799689 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.803514 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.803806 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.804299 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.804492 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 00:57:20.804884 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 00:57:23.006238 140372199180096 submission_runner.py:363] Time since start: 2796.46s, 	Step: 7926, 	{'train/accuracy': 0.9886781722783503, 'train/loss': 0.03918695077300072, 'train/mean_average_precision': 0.20274889888109837, 'validation/accuracy': 0.9857604121759477, 'validation/loss': 0.04838194325566292, 'validation/mean_average_precision': 0.1896779518117608, 'validation/num_examples': 43793, 'test/accuracy': 0.9848955374001926, 'test/loss': 0.050965193659067154, 'test/mean_average_precision': 0.18708562028756698, 'test/num_examples': 43793}
I0310 00:57:23.015635 140320179816192 logging_writer.py:48] [7926] global_step=7926, preemption_count=0, score=2156.566594, test/accuracy=0.984896, test/loss=0.050965, test/mean_average_precision=0.187086, test/num_examples=43793, total_duration=2796.460279, train/accuracy=0.988678, train/loss=0.039187, train/mean_average_precision=0.202749, validation/accuracy=0.985760, validation/loss=0.048382, validation/mean_average_precision=0.189678, validation/num_examples=43793
I0310 00:57:23.081283 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_7926.
I0310 00:57:43.618284 140320188208896 logging_writer.py:48] [8000] global_step=8000, grad_norm=0.023275, loss=0.037792
I0310 00:57:43.622801 140372199180096 pytorch_submission_base.py:86] 8000) loss = 0.038, grad_norm = 0.023
I0310 00:59:57.367211 140320179816192 logging_writer.py:48] [8500] global_step=8500, grad_norm=0.022459, loss=0.040526
I0310 00:59:57.371551 140372199180096 pytorch_submission_base.py:86] 8500) loss = 0.041, grad_norm = 0.022
I0310 01:01:23.237976 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:01:38.156737 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.280153 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.280430 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.284246 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.284590 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.285157 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.285243 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:38.286074 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.026513 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.152753 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.154272 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.158332 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.158636 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.158731 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.159097 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:01:53.159420 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:02:18.927038 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:02:19.208391 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.346153 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.346243 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.352022 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.353286 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.353499 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.353732 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.353791 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.495847 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.629611 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.630622 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.635153 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.635208 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.635519 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.635880 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:19.636402 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:02:21.885913 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:02:22.171327 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.307335 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.308334 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.314236 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.314464 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.314609 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.314746 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.314826 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.462467 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.597567 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.597584 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.601360 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.601533 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.601631 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.601754 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:02:22.602483 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:02:24.814357 140372199180096 submission_runner.py:363] Time since start: 3097.83s, 	Step: 8819, 	{'train/accuracy': 0.9889500255372647, 'train/loss': 0.037685029208660126, 'train/mean_average_precision': 0.22604734852524877, 'validation/accuracy': 0.9859857092636479, 'validation/loss': 0.04720064625144005, 'validation/mean_average_precision': 0.2018465381390283, 'validation/num_examples': 43793, 'test/accuracy': 0.9850876021765657, 'test/loss': 0.04967644438147545, 'test/mean_average_precision': 0.20168262772863, 'test/num_examples': 43793}
I0310 01:02:24.824269 140320188208896 logging_writer.py:48] [8819] global_step=8819, preemption_count=0, score=2395.588224, test/accuracy=0.985088, test/loss=0.049676, test/mean_average_precision=0.201683, test/num_examples=43793, total_duration=3097.834555, train/accuracy=0.988950, train/loss=0.037685, train/mean_average_precision=0.226047, validation/accuracy=0.985986, validation/loss=0.047201, validation/mean_average_precision=0.201847, validation/num_examples=43793
I0310 01:02:24.881862 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_8819.
I0310 01:03:14.479051 140320179816192 logging_writer.py:48] [9000] global_step=9000, grad_norm=0.016146, loss=0.039609
I0310 01:03:14.483173 140372199180096 pytorch_submission_base.py:86] 9000) loss = 0.040, grad_norm = 0.016
I0310 01:05:28.253548 140320188208896 logging_writer.py:48] [9500] global_step=9500, grad_norm=0.016682, loss=0.038578
I0310 01:05:28.257935 140372199180096 pytorch_submission_base.py:86] 9500) loss = 0.039, grad_norm = 0.017
I0310 01:06:25.153629 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:06:40.044291 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.191810 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.194066 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.196078 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.197007 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.197182 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.197185 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:40.197217 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:54.951514 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.085925 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.087050 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.090167 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.090511 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.090566 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.090705 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:06:55.091809 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:07:20.555427 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:07:20.836234 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.994135 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.996162 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.998238 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.998347 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.998511 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:20.999670 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.000007 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.130323 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.276139 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.279913 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.281110 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.281665 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.282013 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.282044 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:21.282148 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:07:23.546096 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:07:23.835114 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.024683 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.027122 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.029566 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.030317 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.030964 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.031153 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.031699 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.162088 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.316079 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.319525 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.321702 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.323103 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.323263 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.323269 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:07:24.324222 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:07:26.624729 140372199180096 submission_runner.py:363] Time since start: 3399.75s, 	Step: 9714, 	{'train/accuracy': 0.9890529000660345, 'train/loss': 0.03719095140695572, 'train/mean_average_precision': 0.2437141280765701, 'validation/accuracy': 0.9860640558184698, 'validation/loss': 0.04704448580741882, 'validation/mean_average_precision': 0.2112658466804817, 'validation/num_examples': 43793, 'test/accuracy': 0.9851402515121942, 'test/loss': 0.04955701157450676, 'test/mean_average_precision': 0.2057642311521517, 'test/num_examples': 43793}
I0310 01:07:26.633991 140320179816192 logging_writer.py:48] [9714] global_step=9714, preemption_count=0, score=2634.728505, test/accuracy=0.985140, test/loss=0.049557, test/mean_average_precision=0.205764, test/num_examples=43793, total_duration=3399.750217, train/accuracy=0.989053, train/loss=0.037191, train/mean_average_precision=0.243714, validation/accuracy=0.986064, validation/loss=0.047044, validation/mean_average_precision=0.211266, validation/num_examples=43793
I0310 01:07:26.699913 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_9714.
I0310 01:08:43.503078 140320188208896 logging_writer.py:48] [10000] global_step=10000, grad_norm=0.018541, loss=0.035550
I0310 01:08:43.507745 140372199180096 pytorch_submission_base.py:86] 10000) loss = 0.036, grad_norm = 0.019
I0310 01:10:57.899093 140320179816192 logging_writer.py:48] [10500] global_step=10500, grad_norm=0.016365, loss=0.040833
I0310 01:10:57.903588 140372199180096 pytorch_submission_base.py:86] 10500) loss = 0.041, grad_norm = 0.016
I0310 01:11:26.947334 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:11:41.923182 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.085723 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.087507 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.090363 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.090382 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.090361 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.090475 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:42.091273 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.456674 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.588949 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.590445 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.594064 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.594347 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.594500 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.594760 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:11:56.595037 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:12:22.785245 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:12:23.103454 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.279078 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.281442 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.284030 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.284142 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.284355 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.284459 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.284480 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.442271 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.588959 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.591125 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.593908 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.594029 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.594162 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.594386 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:23.594597 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:12:25.992068 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:12:26.307724 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.485809 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.488526 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.490597 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.491075 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.491083 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.491178 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.491254 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.639166 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.794149 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.796191 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.798349 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.798474 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.798872 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.799132 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:12:26.799641 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:12:29.108163 140372199180096 submission_runner.py:363] Time since start: 3701.54s, 	Step: 10609, 	{'train/accuracy': 0.9892725363708202, 'train/loss': 0.0363214910030365, 'train/mean_average_precision': 0.2630055357246244, 'validation/accuracy': 0.9863181746957678, 'validation/loss': 0.046280860900878906, 'validation/mean_average_precision': 0.2222629184417636, 'validation/num_examples': 43793, 'test/accuracy': 0.9853512700493935, 'test/loss': 0.04881281033158302, 'test/mean_average_precision': 0.22212380941670062, 'test/num_examples': 43793}
I0310 01:12:29.117442 140320188208896 logging_writer.py:48] [10609] global_step=10609, preemption_count=0, score=2873.794722, test/accuracy=0.985351, test/loss=0.048813, test/mean_average_precision=0.222124, test/num_examples=43793, total_duration=3701.543940, train/accuracy=0.989273, train/loss=0.036321, train/mean_average_precision=0.263006, validation/accuracy=0.986318, validation/loss=0.046281, validation/mean_average_precision=0.222263, validation/num_examples=43793
I0310 01:12:29.174264 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_10609.
I0310 01:14:14.022325 140320179816192 logging_writer.py:48] [11000] global_step=11000, grad_norm=0.018193, loss=0.036699
I0310 01:14:14.026618 140372199180096 pytorch_submission_base.py:86] 11000) loss = 0.037, grad_norm = 0.018
I0310 01:16:27.495898 140320188208896 logging_writer.py:48] [11500] global_step=11500, grad_norm=0.018424, loss=0.034281
I0310 01:16:27.500162 140372199180096 pytorch_submission_base.py:86] 11500) loss = 0.034, grad_norm = 0.018
I0310 01:16:29.384761 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:16:44.277926 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.438222 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.438873 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.440881 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.440959 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.441418 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.441919 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:44.442366 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.768146 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.935987 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.936712 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.937939 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.938465 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.938594 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.938627 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:16:58.939239 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:17:24.659481 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:17:25.093397 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.259576 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.260908 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.264887 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.265401 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.265445 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.269011 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.277232 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.439733 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.598189 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.598775 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.602140 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.602468 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.602653 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.602756 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:25.606814 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:17:28.067233 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:17:28.390022 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.549309 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.550008 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.554275 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.554749 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.555009 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.555497 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.555885 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.740164 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.896751 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.897368 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.900979 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.901881 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.901929 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.902003 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:17:28.902058 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:17:31.266496 140372199180096 submission_runner.py:363] Time since start: 4003.98s, 	Step: 11508, 	{'train/accuracy': 0.9895931190430107, 'train/loss': 0.035192571580410004, 'train/mean_average_precision': 0.2873436082384145, 'validation/accuracy': 0.9863279172725331, 'validation/loss': 0.04591350257396698, 'validation/mean_average_precision': 0.22386595467967396, 'validation/num_examples': 43793, 'test/accuracy': 0.9854051829690772, 'test/loss': 0.04844185337424278, 'test/mean_average_precision': 0.21946643829806364, 'test/num_examples': 43793}
I0310 01:17:31.275785 140320179816192 logging_writer.py:48] [11508] global_step=11508, preemption_count=0, score=3112.811789, test/accuracy=0.985405, test/loss=0.048442, test/mean_average_precision=0.219466, test/num_examples=43793, total_duration=4003.981397, train/accuracy=0.989593, train/loss=0.035193, train/mean_average_precision=0.287344, validation/accuracy=0.986328, validation/loss=0.045914, validation/mean_average_precision=0.223866, validation/num_examples=43793
I0310 01:17:31.334721 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_11508.
I0310 01:19:44.807138 140320188208896 logging_writer.py:48] [12000] global_step=12000, grad_norm=0.018937, loss=0.035451
I0310 01:19:44.812367 140372199180096 pytorch_submission_base.py:86] 12000) loss = 0.035, grad_norm = 0.019
I0310 01:21:31.465671 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:21:46.826308 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.968116 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.970235 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.972063 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.972668 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.972946 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.973189 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:21:46.973302 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:01.896566 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.052681 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.053237 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.056024 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.057130 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.057162 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.057264 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:02.057348 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:22:27.717131 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:22:28.041462 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.203767 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.206030 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.209954 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.210048 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.210496 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.210730 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.210930 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.402450 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.560481 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.562821 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.565117 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.565445 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.565814 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.565895 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:28.566122 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:22:30.917435 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:22:31.252098 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.414970 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.416110 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.419566 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.419641 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.419799 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.419849 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.421775 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.603585 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.777084 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.779005 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.781429 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.782456 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.782513 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.782586 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:22:31.782685 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:22:34.066845 140372199180096 submission_runner.py:363] Time since start: 4306.06s, 	Step: 12398, 	{'train/accuracy': 0.9896633689719555, 'train/loss': 0.034833647310733795, 'train/mean_average_precision': 0.2876197009159856, 'validation/accuracy': 0.9864850163228754, 'validation/loss': 0.04543754458427429, 'validation/mean_average_precision': 0.23009094248703854, 'validation/num_examples': 43793, 'test/accuracy': 0.9855349109320659, 'test/loss': 0.04800523445010185, 'test/mean_average_precision': 0.2332415888777941, 'test/num_examples': 43793}
I0310 01:22:34.076313 140320179816192 logging_writer.py:48] [12398] global_step=12398, preemption_count=0, score=3351.770789, test/accuracy=0.985535, test/loss=0.048005, test/mean_average_precision=0.233242, test/num_examples=43793, total_duration=4306.062299, train/accuracy=0.989663, train/loss=0.034834, train/mean_average_precision=0.287620, validation/accuracy=0.986485, validation/loss=0.045438, validation/mean_average_precision=0.230091, validation/num_examples=43793
I0310 01:22:34.134725 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_12398.
I0310 01:23:01.812687 140320188208896 logging_writer.py:48] [12500] global_step=12500, grad_norm=0.016153, loss=0.029916
I0310 01:23:01.817054 140372199180096 pytorch_submission_base.py:86] 12500) loss = 0.030, grad_norm = 0.016
I0310 01:25:15.867012 140320179816192 logging_writer.py:48] [13000] global_step=13000, grad_norm=0.019304, loss=0.035048
I0310 01:25:15.871114 140372199180096 pytorch_submission_base.py:86] 13000) loss = 0.035, grad_norm = 0.019
I0310 01:26:34.449408 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:26:49.491895 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.659671 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.660032 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.663169 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.663176 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.663695 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.663716 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:26:49.663802 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.826899 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.977275 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.978531 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.980570 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.980708 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.980939 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.981504 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:04.982379 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:27:31.244436 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:27:31.573182 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.746450 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.748323 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.750511 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.750696 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.751337 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.751454 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.752710 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:31.933277 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.112697 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.113521 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.116308 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.116801 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.116882 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.116974 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:32.117132 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:27:34.550569 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:27:34.888615 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.066672 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.067758 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.071439 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.071965 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.072056 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.072287 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.072388 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.253175 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.423707 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.425246 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.427338 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.428039 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.428412 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.428472 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:27:35.429498 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:27:37.824535 140372199180096 submission_runner.py:363] Time since start: 4609.05s, 	Step: 13294, 	{'train/accuracy': 0.9899022613851453, 'train/loss': 0.034058067947626114, 'train/mean_average_precision': 0.2982618731945897, 'validation/accuracy': 0.9865796005056398, 'validation/loss': 0.044942669570446014, 'validation/mean_average_precision': 0.2420953829797762, 'validation/num_examples': 43793, 'test/accuracy': 0.9857080219476126, 'test/loss': 0.04762006551027298, 'test/mean_average_precision': 0.23201857295425204, 'test/num_examples': 43793}
I0310 01:27:37.834039 140320188208896 logging_writer.py:48] [13294] global_step=13294, preemption_count=0, score=3590.860846, test/accuracy=0.985708, test/loss=0.047620, test/mean_average_precision=0.232019, test/num_examples=43793, total_duration=4609.046038, train/accuracy=0.989902, train/loss=0.034058, train/mean_average_precision=0.298262, validation/accuracy=0.986580, validation/loss=0.044943, validation/mean_average_precision=0.242095, validation/num_examples=43793
I0310 01:27:37.891601 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_13294.
I0310 01:28:35.191939 140320179816192 logging_writer.py:48] [13500] global_step=13500, grad_norm=0.015540, loss=0.034897
I0310 01:28:35.196215 140372199180096 pytorch_submission_base.py:86] 13500) loss = 0.035, grad_norm = 0.016
I0310 01:30:50.243459 140320188208896 logging_writer.py:48] [14000] global_step=14000, grad_norm=0.026007, loss=0.042733
I0310 01:30:50.248237 140372199180096 pytorch_submission_base.py:86] 14000) loss = 0.043, grad_norm = 0.026
I0310 01:31:38.051838 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:31:53.152979 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.323843 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.325201 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.326708 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.327249 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.327543 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.328367 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:31:53.328482 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:07.862953 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.016401 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.018975 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.020142 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.020670 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.021540 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.021594 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:08.022076 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:32:33.588567 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:32:33.925774 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.109864 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.111656 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.112454 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.112958 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.113948 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.113974 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.114060 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.285807 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.451879 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.452483 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.454494 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.454984 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.455296 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.455687 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:34.456457 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:32:36.907705 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:32:37.245066 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.428423 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.429533 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.431705 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.431744 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.432011 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.432389 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.433413 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.606261 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.772341 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.772654 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.775544 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.776117 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.776418 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.776863 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:32:37.777645 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:32:40.115934 140372199180096 submission_runner.py:363] Time since start: 4912.65s, 	Step: 14179, 	{'train/accuracy': 0.9899685452549607, 'train/loss': 0.03375289589166641, 'train/mean_average_precision': 0.3173908791583978, 'validation/accuracy': 0.9866035510068547, 'validation/loss': 0.0451202392578125, 'validation/mean_average_precision': 0.2389279229315391, 'validation/num_examples': 43793, 'test/accuracy': 0.9857185518147383, 'test/loss': 0.04762783646583557, 'test/mean_average_precision': 0.23987969473756626, 'test/num_examples': 43793}
I0310 01:32:40.125573 140320179816192 logging_writer.py:48] [14179] global_step=14179, preemption_count=0, score=3829.869134, test/accuracy=0.985719, test/loss=0.047628, test/mean_average_precision=0.239880, test/num_examples=43793, total_duration=4912.648462, train/accuracy=0.989969, train/loss=0.033753, train/mean_average_precision=0.317391, validation/accuracy=0.986604, validation/loss=0.045120, validation/mean_average_precision=0.238928, validation/num_examples=43793
I0310 01:32:40.182631 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_14179.
I0310 01:34:06.666297 140320188208896 logging_writer.py:48] [14500] global_step=14500, grad_norm=0.017673, loss=0.033145
I0310 01:34:06.671197 140372199180096 pytorch_submission_base.py:86] 14500) loss = 0.033, grad_norm = 0.018
I0310 01:36:22.018835 140320179816192 logging_writer.py:48] [15000] global_step=15000, grad_norm=0.016648, loss=0.032808
I0310 01:36:22.024163 140372199180096 pytorch_submission_base.py:86] 15000) loss = 0.033, grad_norm = 0.017
I0310 01:36:40.190489 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:36:55.018638 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.196872 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.198470 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.198673 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.199784 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.199959 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.200027 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:36:55.200399 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.805255 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.958982 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.960749 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.960952 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.962674 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.962687 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.962818 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:09.962840 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:37:35.483664 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:37:35.816610 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.008402 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.010099 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.012765 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.012929 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.013186 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.013411 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.014046 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.175365 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.338962 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.340142 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.342804 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.343571 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.343815 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.344281 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:36.344839 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:37:38.765205 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:37:39.106050 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.296619 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.297698 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.301500 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.301597 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.301758 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.301757 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.302159 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.463669 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.631519 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.633426 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.634840 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.635251 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.635414 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.635881 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:37:39.636435 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:37:41.979631 140372199180096 submission_runner.py:363] Time since start: 5214.79s, 	Step: 15068, 	{'train/accuracy': 0.9899110621170478, 'train/loss': 0.033747754991054535, 'train/mean_average_precision': 0.31201895537150803, 'validation/accuracy': 0.9864732440426173, 'validation/loss': 0.044722046703100204, 'validation/mean_average_precision': 0.24172375413921507, 'validation/num_examples': 43793, 'test/accuracy': 0.9856486334970236, 'test/loss': 0.047151535749435425, 'test/mean_average_precision': 0.23945018083224043, 'test/num_examples': 43793}
I0310 01:37:41.989073 140320188208896 logging_writer.py:48] [15068] global_step=15068, preemption_count=0, score=4068.708351, test/accuracy=0.985649, test/loss=0.047152, test/mean_average_precision=0.239450, test/num_examples=43793, total_duration=5214.787127, train/accuracy=0.989911, train/loss=0.033748, train/mean_average_precision=0.312019, validation/accuracy=0.986473, validation/loss=0.044722, validation/mean_average_precision=0.241724, validation/num_examples=43793
I0310 01:37:42.046962 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_15068.
I0310 01:39:38.637025 140320179816192 logging_writer.py:48] [15500] global_step=15500, grad_norm=0.018119, loss=0.036751
I0310 01:39:38.642126 140372199180096 pytorch_submission_base.py:86] 15500) loss = 0.037, grad_norm = 0.018
I0310 01:41:42.113362 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:41:56.931022 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.110075 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.112512 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.114739 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.115219 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.115384 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.115405 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:41:57.115503 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.440339 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.593297 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.594264 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.596805 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.597376 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.597534 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.597825 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:11.597949 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:42:37.574495 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:42:37.917514 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.111891 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.113265 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.114748 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.115110 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.115684 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.115685 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.115720 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.271032 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.441706 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.442730 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.445505 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.445766 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.446045 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.446263 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:38.446308 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:42:40.891846 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:42:41.230454 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.430305 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.431266 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.433265 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.433644 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.434196 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.434744 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.434808 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.580671 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.746567 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.747576 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.751451 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.751736 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.751807 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.752032 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:42:41.752135 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:42:44.145951 140372199180096 submission_runner.py:363] Time since start: 5516.71s, 	Step: 15961, 	{'train/accuracy': 0.9901138411539936, 'train/loss': 0.03330942988395691, 'train/mean_average_precision': 0.3270719078781566, 'validation/accuracy': 0.9866096401173331, 'validation/loss': 0.0446469709277153, 'validation/mean_average_precision': 0.2497622338589787, 'validation/num_examples': 43793, 'test/accuracy': 0.9856903317708414, 'test/loss': 0.04720886051654816, 'test/mean_average_precision': 0.2434674174206593, 'test/num_examples': 43793}
I0310 01:42:44.155565 140320188208896 logging_writer.py:48] [15961] global_step=15961, preemption_count=0, score=4307.606700, test/accuracy=0.985690, test/loss=0.047209, test/mean_average_precision=0.243467, test/num_examples=43793, total_duration=5516.709993, train/accuracy=0.990114, train/loss=0.033309, train/mean_average_precision=0.327072, validation/accuracy=0.986610, validation/loss=0.044647, validation/mean_average_precision=0.249762, validation/num_examples=43793
I0310 01:42:44.212582 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_15961.
I0310 01:42:55.095346 140320179816192 logging_writer.py:48] [16000] global_step=16000, grad_norm=0.017616, loss=0.033888
I0310 01:42:55.099997 140372199180096 pytorch_submission_base.py:86] 16000) loss = 0.034, grad_norm = 0.018
I0310 01:45:11.008947 140320188208896 logging_writer.py:48] [16500] global_step=16500, grad_norm=0.017257, loss=0.034712
I0310 01:45:11.014228 140372199180096 pytorch_submission_base.py:86] 16500) loss = 0.035, grad_norm = 0.017
I0310 01:46:44.393861 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:46:58.846875 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.026698 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.027977 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.030298 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.030369 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.030805 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.031309 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:46:59.031460 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.623411 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.778756 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.779215 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.782871 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.783056 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.783096 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.783478 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:13.784012 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:47:39.549108 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:47:39.891518 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.085014 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.086234 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.087910 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.088248 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.088767 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.089218 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.089256 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.253680 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.416400 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.417073 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.420202 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.420560 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.420608 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.421323 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:40.421334 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:47:42.846496 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:47:43.189922 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.380927 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.382472 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.384966 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.385264 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.385381 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.385384 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.385502 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.553689 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.719677 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.719806 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.722343 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.722874 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.723217 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.723666 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:47:43.724410 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:47:46.137811 140372199180096 submission_runner.py:363] Time since start: 5818.99s, 	Step: 16851, 	{'train/accuracy': 0.9902286325710936, 'train/loss': 0.03281343728303909, 'train/mean_average_precision': 0.33965927717043654, 'validation/accuracy': 0.9865934024893908, 'validation/loss': 0.04456828534603119, 'validation/mean_average_precision': 0.24967472956111264, 'validation/num_examples': 43793, 'test/accuracy': 0.9857602500885562, 'test/loss': 0.04702538251876831, 'test/mean_average_precision': 0.2546390198864271, 'test/num_examples': 43793}
I0310 01:47:46.147475 140320179816192 logging_writer.py:48] [16851] global_step=16851, preemption_count=0, score=4546.638315, test/accuracy=0.985760, test/loss=0.047025, test/mean_average_precision=0.254639, test/num_examples=43793, total_duration=5818.990466, train/accuracy=0.990229, train/loss=0.032813, train/mean_average_precision=0.339659, validation/accuracy=0.986593, validation/loss=0.044568, validation/mean_average_precision=0.249675, validation/num_examples=43793
I0310 01:47:46.205779 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_16851.
I0310 01:48:25.867322 140320188208896 logging_writer.py:48] [17000] global_step=17000, grad_norm=0.015841, loss=0.031901
I0310 01:48:25.872047 140372199180096 pytorch_submission_base.py:86] 17000) loss = 0.032, grad_norm = 0.016
I0310 01:50:38.644598 140320179816192 logging_writer.py:48] [17500] global_step=17500, grad_norm=0.017114, loss=0.030065
I0310 01:50:38.649585 140372199180096 pytorch_submission_base.py:86] 17500) loss = 0.030, grad_norm = 0.017
I0310 01:51:46.335109 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:52:01.294364 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.450030 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.450870 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.454058 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.454272 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.454769 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.454880 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:01.455101 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.368364 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.512149 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.513423 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.515430 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.515513 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.516006 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.516296 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:16.516579 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:52:43.101301 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:52:43.419251 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.596443 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.596554 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.600115 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.600444 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.600466 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.600519 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.600566 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.764705 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.917328 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.918598 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.922094 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.922143 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.922248 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.922586 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:43.922754 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:52:46.249816 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:52:46.571383 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.746619 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.746620 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.750586 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.750973 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.751550 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.751658 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.752359 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:46.921462 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.078085 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.078736 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.081611 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.082009 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.082188 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.082208 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:52:47.084038 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:52:49.357933 140372199180096 submission_runner.py:363] Time since start: 6120.93s, 	Step: 17754, 	{'train/accuracy': 0.9903673462968006, 'train/loss': 0.03214098885655403, 'train/mean_average_precision': 0.346038727069608, 'validation/accuracy': 0.9867841946177135, 'validation/loss': 0.04442818462848663, 'validation/mean_average_precision': 0.2564213221348239, 'validation/num_examples': 43793, 'test/accuracy': 0.9858828177418995, 'test/loss': 0.046999022364616394, 'test/mean_average_precision': 0.25713787138598165, 'test/num_examples': 43793}
I0310 01:52:49.367749 140320188208896 logging_writer.py:48] [17754] global_step=17754, preemption_count=0, score=4785.599719, test/accuracy=0.985883, test/loss=0.046999, test/mean_average_precision=0.257138, test/num_examples=43793, total_duration=6120.931734, train/accuracy=0.990367, train/loss=0.032141, train/mean_average_precision=0.346039, validation/accuracy=0.986784, validation/loss=0.044428, validation/mean_average_precision=0.256421, validation/num_examples=43793
I0310 01:52:49.425911 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_17754.
I0310 01:53:56.583032 140320179816192 logging_writer.py:48] [18000] global_step=18000, grad_norm=0.018511, loss=0.032629
I0310 01:53:56.587483 140372199180096 pytorch_submission_base.py:86] 18000) loss = 0.033, grad_norm = 0.019
I0310 01:56:14.106685 140320188208896 logging_writer.py:48] [18500] global_step=18500, grad_norm=0.019417, loss=0.032918
I0310 01:56:14.111353 140372199180096 pytorch_submission_base.py:86] 18500) loss = 0.033, grad_norm = 0.019
I0310 01:56:49.622168 140372199180096 spec.py:298] Evaluating on the training split.
W0310 01:57:04.485939 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.628215 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.631087 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.632250 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.632382 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.633040 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.633172 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:04.633852 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.241735 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.383401 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.383488 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.385721 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.386112 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.386424 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.386558 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:19.387369 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:57:45.466502 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 01:57:45.782634 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.942097 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.942438 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.946745 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.946923 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.946999 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.947335 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:45.948102 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.116420 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.269178 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.269612 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.272652 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.272744 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.272759 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.273028 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:46.273836 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:57:48.586156 140372199180096 spec.py:326] Evaluating on the test split.
W0310 01:57:48.894852 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.064338 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.065626 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.069575 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.069569 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.069587 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.069618 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.070357 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.230846 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.386041 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.387893 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.389065 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.389364 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.389863 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.390259 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 01:57:49.391584 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 01:57:51.660537 140372199180096 submission_runner.py:363] Time since start: 6424.22s, 	Step: 18633, 	{'train/accuracy': 0.9904756872223965, 'train/loss': 0.031618632376194, 'train/mean_average_precision': 0.3715917819054738, 'validation/accuracy': 0.9868434619597031, 'validation/loss': 0.04433140903711319, 'validation/mean_average_precision': 0.2563570103541287, 'validation/num_examples': 43793, 'test/accuracy': 0.9859384154403232, 'test/loss': 0.04706360027194023, 'test/mean_average_precision': 0.25373384438275903, 'test/num_examples': 43793}
I0310 01:57:51.670385 140320179816192 logging_writer.py:48] [18633] global_step=18633, preemption_count=0, score=5024.634745, test/accuracy=0.985938, test/loss=0.047064, test/mean_average_precision=0.253734, test/num_examples=43793, total_duration=6424.218777, train/accuracy=0.990476, train/loss=0.031619, train/mean_average_precision=0.371592, validation/accuracy=0.986843, validation/loss=0.044331, validation/mean_average_precision=0.256357, validation/num_examples=43793
I0310 01:57:51.727885 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_18633.
I0310 01:59:31.198050 140320188208896 logging_writer.py:48] [19000] global_step=19000, grad_norm=0.019464, loss=0.035623
I0310 01:59:31.202695 140372199180096 pytorch_submission_base.py:86] 19000) loss = 0.036, grad_norm = 0.019
I0310 02:01:46.080459 140320179816192 logging_writer.py:48] [19500] global_step=19500, grad_norm=0.020710, loss=0.032134
I0310 02:01:46.085731 140372199180096 pytorch_submission_base.py:86] 19500) loss = 0.032, grad_norm = 0.021
I0310 02:01:51.981742 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:02:06.885346 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.031189 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.032912 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.034158 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.035216 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.035584 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.035840 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:07.036244 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.475648 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.623126 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.626118 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.627881 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.627902 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.628737 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.628708 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:21.628897 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:02:48.296090 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:02:48.599346 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.760054 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.762587 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.765245 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.765532 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.766296 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.766305 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.767071 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:48.911165 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.065180 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.067653 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.069792 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.069879 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.070369 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.070909 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:49.071096 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:02:51.395857 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:02:51.706720 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.864445 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.866966 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.869191 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.869358 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.869934 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.870216 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:51.870232 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.022131 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.178603 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.181478 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.182586 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.182934 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.183240 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.183658 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:02:52.183763 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:02:54.456080 140372199180096 submission_runner.py:363] Time since start: 6726.58s, 	Step: 19523, 	{'train/accuracy': 0.9908031241960773, 'train/loss': 0.03079315833747387, 'train/mean_average_precision': 0.36636948802795377, 'validation/accuracy': 0.9868247886875694, 'validation/loss': 0.04382000118494034, 'validation/mean_average_precision': 0.26865446146464583, 'validation/num_examples': 43793, 'test/accuracy': 0.9859666354842201, 'test/loss': 0.046524547040462494, 'test/mean_average_precision': 0.2604606590843757, 'test/num_examples': 43793}
I0310 02:02:54.465870 140320188208896 logging_writer.py:48] [19523] global_step=19523, preemption_count=0, score=5263.717046, test/accuracy=0.985967, test/loss=0.046525, test/mean_average_precision=0.260461, test/num_examples=43793, total_duration=6726.578374, train/accuracy=0.990803, train/loss=0.030793, train/mean_average_precision=0.366369, validation/accuracy=0.986825, validation/loss=0.043820, validation/mean_average_precision=0.268654, validation/num_examples=43793
I0310 02:02:54.524062 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_19523.
I0310 02:05:03.148998 140320179816192 logging_writer.py:48] [20000] global_step=20000, grad_norm=0.019715, loss=0.031614
I0310 02:05:03.153636 140372199180096 pytorch_submission_base.py:86] 20000) loss = 0.032, grad_norm = 0.020
I0310 02:06:54.552538 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:07:09.388847 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.537239 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.539870 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.541475 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.542526 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.542790 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.542884 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:09.543890 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.204205 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.356957 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.359918 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.361371 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.361810 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.362362 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.362904 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:24.363312 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:07:51.692857 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:07:52.004849 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.162893 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.165301 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.167931 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.168200 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.168561 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.168777 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.169210 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.319211 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.483438 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.485434 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.487478 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.488332 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.488464 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.488816 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:52.489279 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:07:54.798475 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:07:55.107298 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.263386 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.266007 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.268734 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.269101 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.269677 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.270098 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.270199 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.432618 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.587943 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.590669 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.591846 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.592633 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.593194 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.593575 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:07:55.593752 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:07:57.911380 140372199180096 submission_runner.py:363] Time since start: 7029.15s, 	Step: 20418, 	{'train/accuracy': 0.9908423435530975, 'train/loss': 0.030524253845214844, 'train/mean_average_precision': 0.39462691525899934, 'validation/accuracy': 0.9868783728597792, 'validation/loss': 0.04397283494472504, 'validation/mean_average_precision': 0.2627359718442208, 'validation/num_examples': 43793, 'test/accuracy': 0.9860504532265408, 'test/loss': 0.04655790328979492, 'test/mean_average_precision': 0.2615845346483694, 'test/num_examples': 43793}
I0310 02:07:57.921374 140320188208896 logging_writer.py:48] [20418] global_step=20418, preemption_count=0, score=5502.552521, test/accuracy=0.986050, test/loss=0.046558, test/mean_average_precision=0.261585, test/num_examples=43793, total_duration=7029.149148, train/accuracy=0.990842, train/loss=0.030524, train/mean_average_precision=0.394627, validation/accuracy=0.986878, validation/loss=0.043973, validation/mean_average_precision=0.262736, validation/num_examples=43793
I0310 02:07:57.979909 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_20418.
I0310 02:08:20.010542 140320179816192 logging_writer.py:48] [20500] global_step=20500, grad_norm=0.020927, loss=0.035196
I0310 02:08:20.015058 140372199180096 pytorch_submission_base.py:86] 20500) loss = 0.035, grad_norm = 0.021
I0310 02:10:33.163679 140320188208896 logging_writer.py:48] [21000] global_step=21000, grad_norm=0.022773, loss=0.032506
I0310 02:10:33.168541 140372199180096 pytorch_submission_base.py:86] 21000) loss = 0.033, grad_norm = 0.023
I0310 02:11:58.189484 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:12:13.321140 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.466704 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.468543 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.470736 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.470912 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.471252 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.471977 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:13.472165 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:27.889713 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.036625 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.038211 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.040845 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.041673 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.041727 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.042171 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:28.042484 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:12:54.124512 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:12:54.417658 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.583495 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.584229 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.587069 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.587107 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.587673 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.587911 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.588167 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.718616 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.876211 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.879117 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.881262 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.881498 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.882113 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.882126 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:54.882203 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:12:57.145178 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:12:57.439756 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.622577 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.625019 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.628114 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.629435 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.629634 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.629719 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.629734 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.760540 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.921645 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.924491 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.926457 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.927291 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.927434 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.927498 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:12:57.927892 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:13:00.147097 140372199180096 submission_runner.py:363] Time since start: 7332.79s, 	Step: 21319, 	{'train/accuracy': 0.9910019806291159, 'train/loss': 0.030017368495464325, 'train/mean_average_precision': 0.39697459492751963, 'validation/accuracy': 0.9869002936575013, 'validation/loss': 0.04377181828022003, 'validation/mean_average_precision': 0.2695947749861536, 'validation/num_examples': 43793, 'test/accuracy': 0.9860892031375634, 'test/loss': 0.046448737382888794, 'test/mean_average_precision': 0.2674688459342683, 'test/num_examples': 43793}
I0310 02:13:00.156927 140320179816192 logging_writer.py:48] [21319] global_step=21319, preemption_count=0, score=5741.568091, test/accuracy=0.986089, test/loss=0.046449, test/mean_average_precision=0.267469, test/num_examples=43793, total_duration=7332.786116, train/accuracy=0.991002, train/loss=0.030017, train/mean_average_precision=0.396975, validation/accuracy=0.986900, validation/loss=0.043772, validation/mean_average_precision=0.269595, validation/num_examples=43793
I0310 02:13:00.221899 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_21319.
I0310 02:13:48.469008 140320188208896 logging_writer.py:48] [21500] global_step=21500, grad_norm=0.019895, loss=0.028364
I0310 02:13:48.473643 140372199180096 pytorch_submission_base.py:86] 21500) loss = 0.028, grad_norm = 0.020
I0310 02:16:00.342203 140320179816192 logging_writer.py:48] [22000] global_step=22000, grad_norm=0.022390, loss=0.036091
I0310 02:16:00.346911 140372199180096 pytorch_submission_base.py:86] 22000) loss = 0.036, grad_norm = 0.022
I0310 02:17:00.442132 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:17:15.339814 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.493055 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.496145 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.496963 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.497974 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.498182 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.498147 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:15.498680 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:29.977589 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.127123 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.130472 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.132246 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.132252 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.132752 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.132977 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:30.133335 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:17:57.329772 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:17:57.594368 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.762910 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.765259 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.769490 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.769605 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.769686 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.769977 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.770196 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:57.901237 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.062504 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.066066 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.067113 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.067471 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.067644 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.068218 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:17:58.069029 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:18:00.361374 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:18:00.631708 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.795283 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.798135 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.800179 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.800309 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.800699 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.801822 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.801883 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:00.932623 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.116001 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.119593 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.120660 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.120709 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.121475 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.121595 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:18:01.122052 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:18:03.367087 140372199180096 submission_runner.py:363] Time since start: 7635.04s, 	Step: 22229, 	{'train/accuracy': 0.9909692971456939, 'train/loss': 0.029974257573485374, 'train/mean_average_precision': 0.39771038045102136, 'validation/accuracy': 0.9869132837598552, 'validation/loss': 0.04391176998615265, 'validation/mean_average_precision': 0.27013308782024936, 'validation/num_examples': 43793, 'test/accuracy': 0.986038238580675, 'test/loss': 0.04659600928425789, 'test/mean_average_precision': 0.2660742627280917, 'test/num_examples': 43793}
I0310 02:18:03.376894 140320188208896 logging_writer.py:48] [22229] global_step=22229, preemption_count=0, score=5980.576172, test/accuracy=0.986038, test/loss=0.046596, test/mean_average_precision=0.266074, test/num_examples=43793, total_duration=7635.038739, train/accuracy=0.990969, train/loss=0.029974, train/mean_average_precision=0.397710, validation/accuracy=0.986913, validation/loss=0.043912, validation/mean_average_precision=0.270133, validation/num_examples=43793
I0310 02:18:03.434091 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_22229.
I0310 02:19:15.315216 140320179816192 logging_writer.py:48] [22500] global_step=22500, grad_norm=0.016486, loss=0.029612
I0310 02:19:15.320316 140372199180096 pytorch_submission_base.py:86] 22500) loss = 0.030, grad_norm = 0.016
I0310 02:21:29.303890 140320188208896 logging_writer.py:48] [23000] global_step=23000, grad_norm=0.023421, loss=0.031360
I0310 02:21:29.309008 140372199180096 pytorch_submission_base.py:86] 23000) loss = 0.031, grad_norm = 0.023
I0310 02:22:03.598527 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:22:18.269742 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.437822 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.440104 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.440897 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.441214 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.442515 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.442985 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:18.443163 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:32.892670 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.046608 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.048274 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.049883 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.050031 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.051154 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.051878 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:33.051991 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:22:59.550666 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:22:59.819644 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.987179 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.990006 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.991636 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.992329 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.992475 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.992645 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:22:59.993216 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.124335 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.284415 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.287331 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.289050 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.289438 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.289569 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.289861 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:00.290113 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:23:02.585475 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:23:02.858518 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.027701 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.030296 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.033332 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.033999 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.034053 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.034173 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.034758 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.164896 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.327137 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.330906 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.331059 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.332603 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.332664 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.332696 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:23:03.332873 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:23:05.534081 140372199180096 submission_runner.py:363] Time since start: 7938.20s, 	Step: 23128, 	{'train/accuracy': 0.9911436785584045, 'train/loss': 0.0294950008392334, 'train/mean_average_precision': 0.4086222157120627, 'validation/accuracy': 0.9869356104982759, 'validation/loss': 0.043839164078235626, 'validation/mean_average_precision': 0.26697989479662193, 'validation/num_examples': 43793, 'test/accuracy': 0.986127531853901, 'test/loss': 0.04627693071961403, 'test/mean_average_precision': 0.2658831970911197, 'test/num_examples': 43793}
I0310 02:23:05.544420 140320179816192 logging_writer.py:48] [23128] global_step=23128, preemption_count=0, score=6219.530842, test/accuracy=0.986128, test/loss=0.046277, test/mean_average_precision=0.265883, test/num_examples=43793, total_duration=7938.195161, train/accuracy=0.991144, train/loss=0.029495, train/mean_average_precision=0.408622, validation/accuracy=0.986936, validation/loss=0.043839, validation/mean_average_precision=0.266980, validation/num_examples=43793
I0310 02:23:05.604571 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_23128.
I0310 02:24:44.865885 140320188208896 logging_writer.py:48] [23500] global_step=23500, grad_norm=0.025187, loss=0.035114
I0310 02:24:44.871147 140372199180096 pytorch_submission_base.py:86] 23500) loss = 0.035, grad_norm = 0.025
I0310 02:26:58.482584 140320179816192 logging_writer.py:48] [24000] global_step=24000, grad_norm=0.018290, loss=0.027362
I0310 02:26:58.487877 140372199180096 pytorch_submission_base.py:86] 24000) loss = 0.027, grad_norm = 0.018
I0310 02:27:05.651003 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:27:20.535088 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.686237 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.688311 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.690219 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.690633 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.691368 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.691680 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:20.691839 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.580609 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.733103 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.734808 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.735455 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.736571 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.736563 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.736923 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:27:35.737787 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:28:01.868025 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:28:02.135801 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.303770 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.307255 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.307400 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.307533 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.307578 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.310389 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.314065 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.443560 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.611267 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.613958 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.615348 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.616102 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.616264 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.616683 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:02.617308 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:28:04.880116 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:28:05.148672 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.311635 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.314933 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.316094 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.316422 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.317035 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.317047 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.317122 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.447523 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.608936 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.611948 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.613708 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.613846 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.613911 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.614142 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:28:05.614265 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:28:07.841719 140372199180096 submission_runner.py:363] Time since start: 8240.25s, 	Step: 24028, 	{'train/accuracy': 0.9911354676866475, 'train/loss': 0.02938840538263321, 'train/mean_average_precision': 0.41270226496473916, 'validation/accuracy': 0.9869514421855198, 'validation/loss': 0.04357435181736946, 'validation/mean_average_precision': 0.2720871740966498, 'validation/num_examples': 43793, 'test/accuracy': 0.9860348690231948, 'test/loss': 0.04613222926855087, 'test/mean_average_precision': 0.26651812932492414, 'test/num_examples': 43793}
I0310 02:28:07.851605 140320188208896 logging_writer.py:48] [24028] global_step=24028, preemption_count=0, score=6458.381186, test/accuracy=0.986035, test/loss=0.046132, test/mean_average_precision=0.266518, test/num_examples=43793, total_duration=8240.247641, train/accuracy=0.991135, train/loss=0.029388, train/mean_average_precision=0.412702, validation/accuracy=0.986951, validation/loss=0.043574, validation/mean_average_precision=0.272087, validation/num_examples=43793
I0310 02:28:07.911691 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_24028.
I0310 02:30:14.308195 140320179816192 logging_writer.py:48] [24500] global_step=24500, grad_norm=0.018523, loss=0.031777
I0310 02:30:14.313332 140372199180096 pytorch_submission_base.py:86] 24500) loss = 0.032, grad_norm = 0.019
I0310 02:32:08.137831 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:32:23.569795 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.717127 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.718997 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.721735 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.721875 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.723097 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.723319 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:23.724556 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.637920 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.781575 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.782165 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.785100 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.785643 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.785871 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.786788 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:32:38.786792 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:33:04.931468 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:33:05.325717 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.485403 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.489516 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.489674 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.489804 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.492789 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.493086 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.499598 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.629738 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.790663 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.795465 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.796474 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.796571 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.796620 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.796726 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:05.798017 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:33:08.090632 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:33:08.357945 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.515089 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.515508 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.518259 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.519152 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.519283 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.519486 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.520287 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.650946 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.818103 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.818337 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.821706 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.822139 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.822489 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.822709 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:33:08.822913 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:33:11.076085 140372199180096 submission_runner.py:363] Time since start: 8542.73s, 	Step: 24927, 	{'train/accuracy': 0.9911982035047543, 'train/loss': 0.029199928045272827, 'train/mean_average_precision': 0.4169672335024129, 'validation/accuracy': 0.986922620395922, 'validation/loss': 0.043857745826244354, 'validation/mean_average_precision': 0.2731287987226965, 'validation/num_examples': 43793, 'test/accuracy': 0.9860896243322484, 'test/loss': 0.0465208925306797, 'test/mean_average_precision': 0.26727973143262507, 'test/num_examples': 43793}
I0310 02:33:11.086050 140320188208896 logging_writer.py:48] [24927] global_step=24927, preemption_count=0, score=6697.424283, test/accuracy=0.986090, test/loss=0.046521, test/mean_average_precision=0.267280, test/num_examples=43793, total_duration=8542.734435, train/accuracy=0.991198, train/loss=0.029200, train/mean_average_precision=0.416967, validation/accuracy=0.986923, validation/loss=0.043858, validation/mean_average_precision=0.273129, validation/num_examples=43793
I0310 02:33:11.144775 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_24927.
I0310 02:33:30.939029 140320179816192 logging_writer.py:48] [25000] global_step=25000, grad_norm=0.017591, loss=0.028246
I0310 02:33:30.943849 140372199180096 pytorch_submission_base.py:86] 25000) loss = 0.028, grad_norm = 0.018
I0310 02:35:45.699487 140320188208896 logging_writer.py:48] [25500] global_step=25500, grad_norm=0.019249, loss=0.031072
I0310 02:35:45.704523 140372199180096 pytorch_submission_base.py:86] 25500) loss = 0.031, grad_norm = 0.019
I0310 02:37:11.371618 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:37:26.418109 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.565661 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.568322 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.568623 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.568700 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.569941 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.570444 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:26.571166 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.508668 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.657375 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.659115 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.662635 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.662793 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.662949 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.662940 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:37:41.663112 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:38:08.172152 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:38:08.436610 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.592642 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.594295 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.596885 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.597134 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.597438 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.597817 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.601464 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.732290 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.891634 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.892551 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.896162 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.896451 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.896473 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.897139 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:08.897198 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:38:11.235902 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:38:11.504199 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.663214 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.665507 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.666275 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.667454 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.667665 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.668160 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.668481 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.799791 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.956209 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.957135 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.960017 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.960941 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.961089 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.961142 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:38:11.961256 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:38:14.247162 140372199180096 submission_runner.py:363] Time since start: 8845.97s, 	Step: 25820, 	{'train/accuracy': 0.9913267726233342, 'train/loss': 0.028845127671957016, 'train/mean_average_precision': 0.42906816075989046, 'validation/accuracy': 0.9868540164178656, 'validation/loss': 0.04380244016647339, 'validation/mean_average_precision': 0.27133327186421247, 'validation/num_examples': 43793, 'test/accuracy': 0.9860580347308714, 'test/loss': 0.046390801668167114, 'test/mean_average_precision': 0.26844411589663625, 'test/num_examples': 43793}
I0310 02:38:14.257178 140320179816192 logging_writer.py:48] [25820] global_step=25820, preemption_count=0, score=6936.468994, test/accuracy=0.986058, test/loss=0.046391, test/mean_average_precision=0.268444, test/num_examples=43793, total_duration=8845.968259, train/accuracy=0.991327, train/loss=0.028845, train/mean_average_precision=0.429068, validation/accuracy=0.986854, validation/loss=0.043802, validation/mean_average_precision=0.271333, validation/num_examples=43793
I0310 02:38:14.324803 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_25820.
I0310 02:39:03.859718 140320188208896 logging_writer.py:48] [26000] global_step=26000, grad_norm=0.021821, loss=0.030136
I0310 02:39:03.866073 140372199180096 pytorch_submission_base.py:86] 26000) loss = 0.030, grad_norm = 0.022
I0310 02:41:19.082629 140320179816192 logging_writer.py:48] [26500] global_step=26500, grad_norm=0.020185, loss=0.031174
I0310 02:41:19.088486 140372199180096 pytorch_submission_base.py:86] 26500) loss = 0.031, grad_norm = 0.020
I0310 02:42:14.476626 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:42:31.130096 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.273567 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.276197 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.277725 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.277726 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.278292 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.279442 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:31.279763 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.242707 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.392617 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.393693 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.396023 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.396062 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.396148 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.396307 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:42:46.397657 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:43:12.494267 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:43:13.185688 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.348439 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.352283 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.353124 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.353552 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.353534 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.356492 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.361124 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.513831 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.674791 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.675684 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.678316 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.678597 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.679535 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.679583 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:13.679664 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:43:16.050568 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:43:16.370213 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.530352 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.532369 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.534602 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.535230 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.535405 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.536016 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.536602 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.694188 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.851882 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.853749 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.856820 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.857218 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.857222 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.857221 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:43:16.857830 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:43:19.198260 140372199180096 submission_runner.py:363] Time since start: 9149.07s, 	Step: 26707, 	{'train/accuracy': 0.9914751059957464, 'train/loss': 0.028314396739006042, 'train/mean_average_precision': 0.4239150020995761, 'validation/accuracy': 0.9870005610100454, 'validation/loss': 0.04365060478448868, 'validation/mean_average_precision': 0.2770969516285887, 'validation/num_examples': 43793, 'test/accuracy': 0.9860799368544928, 'test/loss': 0.04633529856801033, 'test/mean_average_precision': 0.2691959331587855, 'test/num_examples': 43793}
I0310 02:43:19.209020 140320188208896 logging_writer.py:48] [26707] global_step=26707, preemption_count=0, score=7175.454702, test/accuracy=0.986080, test/loss=0.046335, test/mean_average_precision=0.269196, test/num_examples=43793, total_duration=9149.073227, train/accuracy=0.991475, train/loss=0.028314, train/mean_average_precision=0.423915, validation/accuracy=0.987001, validation/loss=0.043651, validation/mean_average_precision=0.277097, validation/num_examples=43793
I0310 02:43:19.267675 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_26707.
I0310 02:44:38.021010 140320179816192 logging_writer.py:48] [27000] global_step=27000, grad_norm=0.020692, loss=0.030073
I0310 02:44:38.026050 140372199180096 pytorch_submission_base.py:86] 27000) loss = 0.030, grad_norm = 0.021
I0310 02:46:52.911873 140320188208896 logging_writer.py:48] [27500] global_step=27500, grad_norm=0.022609, loss=0.029140
I0310 02:46:52.920648 140372199180096 pytorch_submission_base.py:86] 27500) loss = 0.029, grad_norm = 0.023
I0310 02:47:19.525803 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:47:34.589618 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.735330 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.736813 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.738567 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.740128 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.740492 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.741179 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:34.741291 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.165950 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.309775 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.311101 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.314218 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.314549 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.314739 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.314836 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:47:49.314952 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:48:16.004916 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:48:16.281083 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.445324 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.445765 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.448740 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.449250 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.450506 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.450711 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.450961 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.582481 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.736888 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.738428 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.741005 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.741218 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.741268 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.741493 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:16.742792 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:48:19.108256 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:48:19.376591 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.533124 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.533171 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.536640 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.536804 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.537070 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.537122 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.537434 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.667917 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.823285 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.825075 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.828424 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.828434 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.829067 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.829237 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:48:19.830322 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:48:22.102967 140372199180096 submission_runner.py:363] Time since start: 9454.12s, 	Step: 27600, 	{'train/accuracy': 0.9916232221292103, 'train/loss': 0.0275217704474926, 'train/mean_average_precision': 0.4659154793624596, 'validation/accuracy': 0.9870001550693468, 'validation/loss': 0.04385528340935707, 'validation/mean_average_precision': 0.27478901964683383, 'validation/num_examples': 43793, 'test/accuracy': 0.9861641757914985, 'test/loss': 0.04660801962018013, 'test/mean_average_precision': 0.26984176668578685, 'test/num_examples': 43793}
I0310 02:48:22.113209 140320179816192 logging_writer.py:48] [27600] global_step=27600, preemption_count=0, score=7414.542928, test/accuracy=0.986164, test/loss=0.046608, test/mean_average_precision=0.269842, test/num_examples=43793, total_duration=9454.122442, train/accuracy=0.991623, train/loss=0.027522, train/mean_average_precision=0.465915, validation/accuracy=0.987000, validation/loss=0.043855, validation/mean_average_precision=0.274789, validation/num_examples=43793
I0310 02:48:22.174419 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_27600.
I0310 02:50:11.350502 140320188208896 logging_writer.py:48] [28000] global_step=28000, grad_norm=0.022644, loss=0.027666
I0310 02:50:11.357255 140372199180096 pytorch_submission_base.py:86] 28000) loss = 0.028, grad_norm = 0.023
I0310 02:52:22.272905 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:52:37.116913 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.266569 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.268646 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.270328 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.270769 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.271085 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.271757 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:37.272859 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:51.850104 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.000403 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.001610 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.003588 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.004124 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.005221 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.005221 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:52:52.005942 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:53:18.066680 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:53:18.333163 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.502258 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.502805 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.506474 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.506752 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.507356 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.507591 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.507935 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.638183 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.802343 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.803690 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.806635 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.807481 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.808209 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.808275 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:18.809043 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:53:21.176005 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:53:21.442917 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.633365 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.633474 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.636591 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.637583 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.637806 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.637977 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.638871 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.769175 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.929526 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.930338 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.933769 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.934387 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.934491 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.935209 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:53:21.935756 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:53:24.222069 140372199180096 submission_runner.py:363] Time since start: 9756.87s, 	Step: 28479, 	{'train/accuracy': 0.9918387990911377, 'train/loss': 0.027026765048503876, 'train/mean_average_precision': 0.47511631129581866, 'validation/accuracy': 0.9868320956201434, 'validation/loss': 0.04387270659208298, 'validation/mean_average_precision': 0.2740803041682703, 'validation/num_examples': 43793, 'test/accuracy': 0.9860310782710295, 'test/loss': 0.04656258225440979, 'test/mean_average_precision': 0.2726253586317318, 'test/num_examples': 43793}
I0310 02:53:24.232107 140320179816192 logging_writer.py:48] [28479] global_step=28479, preemption_count=0, score=7653.482821, test/accuracy=0.986031, test/loss=0.046563, test/mean_average_precision=0.272625, test/num_examples=43793, total_duration=9756.869519, train/accuracy=0.991839, train/loss=0.027027, train/mean_average_precision=0.475116, validation/accuracy=0.986832, validation/loss=0.043873, validation/mean_average_precision=0.274080, validation/num_examples=43793
I0310 02:53:24.295182 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_28479.
I0310 02:53:30.269877 140320188208896 logging_writer.py:48] [28500] global_step=28500, grad_norm=0.020118, loss=0.027151
I0310 02:53:30.280471 140372199180096 pytorch_submission_base.py:86] 28500) loss = 0.027, grad_norm = 0.020
I0310 02:55:44.876180 140320179816192 logging_writer.py:48] [29000] global_step=29000, grad_norm=0.020897, loss=0.026985
I0310 02:55:44.883567 140372199180096 pytorch_submission_base.py:86] 29000) loss = 0.027, grad_norm = 0.021
I0310 02:57:24.346145 140372199180096 spec.py:298] Evaluating on the training split.
W0310 02:57:39.998214 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.149679 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.151237 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.153898 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.154087 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.155083 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.155635 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:40.155656 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.757799 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.911915 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.913548 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.916122 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.916860 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.917133 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.917497 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:57:54.917487 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:58:21.293059 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 02:58:21.558030 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.714896 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.717134 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.718243 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.718273 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.718479 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.718458 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.718740 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:21.849452 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.004550 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.005061 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.007613 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.007806 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.009399 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.009415 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:22.009847 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:58:24.396497 140372199180096 spec.py:326] Evaluating on the test split.
W0310 02:58:24.663526 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.820879 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.820890 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.824142 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.824562 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.824953 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.825193 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.825855 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:24.957581 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.117310 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.118838 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.121841 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.122061 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.122680 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.123238 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 02:58:25.123382 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 02:58:27.441143 140372199180096 submission_runner.py:363] Time since start: 10058.94s, 	Step: 29369, 	{'train/accuracy': 0.9917581037927493, 'train/loss': 0.026948481798171997, 'train/mean_average_precision': 0.4554627546903285, 'validation/accuracy': 0.9870655115218149, 'validation/loss': 0.043927185237407684, 'validation/mean_average_precision': 0.27205836425640384, 'validation/num_examples': 43793, 'test/accuracy': 0.9862399908348036, 'test/loss': 0.0464450903236866, 'test/mean_average_precision': 0.27065357229158304, 'test/num_examples': 43793}
I0310 02:58:27.451407 140320188208896 logging_writer.py:48] [29369] global_step=29369, preemption_count=0, score=7892.332935, test/accuracy=0.986240, test/loss=0.046445, test/mean_average_precision=0.270654, test/num_examples=43793, total_duration=10058.942782, train/accuracy=0.991758, train/loss=0.026948, train/mean_average_precision=0.455463, validation/accuracy=0.987066, validation/loss=0.043927, validation/mean_average_precision=0.272058, validation/num_examples=43793
I0310 02:58:27.509213 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_29369.
I0310 02:59:03.300285 140320179816192 logging_writer.py:48] [29500] global_step=29500, grad_norm=0.020895, loss=0.026583
I0310 02:59:03.305557 140372199180096 pytorch_submission_base.py:86] 29500) loss = 0.027, grad_norm = 0.021
I0310 03:01:19.234783 140320188208896 logging_writer.py:48] [30000] global_step=30000, grad_norm=0.024964, loss=0.030844
I0310 03:01:19.245732 140372199180096 pytorch_submission_base.py:86] 30000) loss = 0.031, grad_norm = 0.025
I0310 03:02:27.514372 140372199180096 spec.py:298] Evaluating on the training split.
W0310 03:02:42.396035 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.559687 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.559781 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.563174 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.563334 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.563740 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.564149 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:42.564345 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.046891 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.191565 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.193073 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.195856 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.196402 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.196516 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.196774 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:02:57.196831 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:03:23.924766 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 03:03:24.191008 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.365802 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.367333 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.369833 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.370444 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.370475 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.370613 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.371249 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.501264 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.660353 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.662237 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.664696 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.665159 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.665689 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.665957 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:24.666848 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:03:27.068647 140372199180096 spec.py:326] Evaluating on the test split.
W0310 03:03:27.334780 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.530217 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.531225 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.535036 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.535323 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.535452 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.535585 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.535546 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.665928 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.822957 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.823577 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.826726 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.827409 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.827974 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.828373 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:03:27.828743 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:03:30.161118 140372199180096 submission_runner.py:363] Time since start: 10362.11s, 	Step: 30250, 	{'train/accuracy': 0.9919171056993568, 'train/loss': 0.026598507538437843, 'train/mean_average_precision': 0.4631048513639719, 'validation/accuracy': 0.9870614521148292, 'validation/loss': 0.044161126017570496, 'validation/mean_average_precision': 0.2773548397562986, 'validation/num_examples': 43793, 'test/accuracy': 0.9862404120294886, 'test/loss': 0.046776946634054184, 'test/mean_average_precision': 0.26984552128651396, 'test/num_examples': 43793}
I0310 03:03:30.171183 140320179816192 logging_writer.py:48] [30250] global_step=30250, preemption_count=0, score=8131.194964, test/accuracy=0.986240, test/loss=0.046777, test/mean_average_precision=0.269846, test/num_examples=43793, total_duration=10362.111007, train/accuracy=0.991917, train/loss=0.026599, train/mean_average_precision=0.463105, validation/accuracy=0.987061, validation/loss=0.044161, validation/mean_average_precision=0.277355, validation/num_examples=43793
I0310 03:03:30.230421 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_30250.
I0310 03:04:38.737854 140320188208896 logging_writer.py:48] [30500] global_step=30500, grad_norm=0.020790, loss=0.026310
I0310 03:04:38.743561 140372199180096 pytorch_submission_base.py:86] 30500) loss = 0.026, grad_norm = 0.021
I0310 03:06:55.037008 140320179816192 logging_writer.py:48] [31000] global_step=31000, grad_norm=0.020734, loss=0.028765
I0310 03:06:55.042525 140372199180096 pytorch_submission_base.py:86] 31000) loss = 0.029, grad_norm = 0.021
I0310 03:07:30.308960 140372199180096 spec.py:298] Evaluating on the training split.
W0310 03:07:45.311902 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.486025 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.486425 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.488761 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.489143 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.489913 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.490467 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:07:45.491200 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.199517 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.347327 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.347651 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.349151 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.349993 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.351027 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.351687 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:00.353159 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:08:27.012024 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 03:08:27.278662 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.467361 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.467470 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.470773 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.471164 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.471212 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.471539 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.474855 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.604676 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.763751 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.765402 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.769142 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.769392 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.769435 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.769624 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:27.769841 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:08:30.199274 140372199180096 spec.py:326] Evaluating on the test split.
W0310 03:08:30.467628 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.607785 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.608677 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.614249 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.614307 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.614422 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.614819 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.614990 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.746341 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.882925 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.883034 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.886904 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.887398 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.887668 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.887733 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:08:30.888410 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:08:33.233286 140372199180096 submission_runner.py:363] Time since start: 10664.91s, 	Step: 31130, 	{'train/accuracy': 0.9920165891716226, 'train/loss': 0.02635093219578266, 'train/mean_average_precision': 0.48155599757329093, 'validation/accuracy': 0.9870529273601595, 'validation/loss': 0.04399643838405609, 'validation/mean_average_precision': 0.27987414245329295, 'validation/num_examples': 43793, 'test/accuracy': 0.9861645969861835, 'test/loss': 0.04660682752728462, 'test/mean_average_precision': 0.2740241611489711, 'test/num_examples': 43793}
I0310 03:08:33.243858 140320188208896 logging_writer.py:48] [31130] global_step=31130, preemption_count=0, score=8370.126636, test/accuracy=0.986165, test/loss=0.046607, test/mean_average_precision=0.274024, test/num_examples=43793, total_duration=10664.905596, train/accuracy=0.992017, train/loss=0.026351, train/mean_average_precision=0.481556, validation/accuracy=0.987053, validation/loss=0.043996, validation/mean_average_precision=0.279874, validation/num_examples=43793
I0310 03:08:33.302789 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_31130.
I0310 03:10:14.841551 140320179816192 logging_writer.py:48] [31500] global_step=31500, grad_norm=0.024120, loss=0.030161
I0310 03:10:14.847335 140372199180096 pytorch_submission_base.py:86] 31500) loss = 0.030, grad_norm = 0.024
I0310 03:12:32.028434 140320188208896 logging_writer.py:48] [32000] global_step=32000, grad_norm=0.024293, loss=0.029235
I0310 03:12:32.033485 140372199180096 pytorch_submission_base.py:86] 32000) loss = 0.029, grad_norm = 0.024
I0310 03:12:33.393264 140372199180096 spec.py:298] Evaluating on the training split.
W0310 03:12:49.146396 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.273367 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.273964 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.276070 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.276286 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.276375 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.277266 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:12:49.277477 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.114441 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.235093 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.236611 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.240732 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.240750 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.240812 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.240932 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:04.241259 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:13:32.087255 140372199180096 spec.py:310] Evaluating on the validation split.
W0310 03:13:32.354563 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.498605 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.498784 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.502300 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.502416 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.502724 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.503127 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.503381 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.634193 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.768460 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.768630 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.771914 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.772739 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.773639 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.773679 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:32.774072 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:13:35.243067 140372199180096 spec.py:326] Evaluating on the test split.
W0310 03:13:35.510352 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.649740 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.650341 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.657176 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.657278 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.657439 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.657457 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.657626 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.788962 140372199180096 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.922483 139631761610560 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.924250 140462298965824 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.927742 139811000866624 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.928329 139922655180608 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.929145 140301935572800 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.929176 140583348655936 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
W0310 03:13:35.929406 139673303791424 metrics.py:232] Ignoring mask for model output 'loss' because of shape mismatch: output.shape=() vs. mask.shape=(4097, 128)
I0310 03:13:38.304928 140372199180096 submission_runner.py:363] Time since start: 10967.99s, 	Step: 32006, 	{'train/accuracy': 0.9920263894818413, 'train/loss': 0.026412736624479294, 'train/mean_average_precision': 0.4737201618525736, 'validation/accuracy': 0.9869790461530218, 'validation/loss': 0.04399755969643593, 'validation/mean_average_precision': 0.28368589592652377, 'validation/num_examples': 43793, 'test/accuracy': 0.9861426948625621, 'test/loss': 0.04674329236149788, 'test/mean_average_precision': 0.27188939623129466, 'test/num_examples': 43793}
I0310 03:13:38.315349 140320179816192 logging_writer.py:48] [32006] global_step=32006, preemption_count=0, score=8609.146855, test/accuracy=0.986143, test/loss=0.046743, test/mean_average_precision=0.271889, test/num_examples=43793, total_duration=10967.989903, train/accuracy=0.992026, train/loss=0.026413, train/mean_average_precision=0.473720, validation/accuracy=0.986979, validation/loss=0.043998, validation/mean_average_precision=0.283686, validation/num_examples=43793
I0310 03:13:38.378062 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_32006.
I0310 03:13:38.388051 140320188208896 logging_writer.py:48] [32006] global_step=32006, preemption_count=0, score=8609.146855
I0310 03:13:38.487887 140372199180096 checkpoint_utils.py:240] Saved checkpoint to /experiment_runs/timing/ogbg_pytorch/trial_1/checkpoint_32006.
I0310 03:13:38.640446 140372199180096 submission_runner.py:524] Tuning trial 1/1
I0310 03:13:38.640708 140372199180096 submission_runner.py:525] Hyperparameters: Hyperparameters(learning_rate=2.4917728606918423, beta1=0.9449369031171744, warmup_steps=3000, decay_steps_factor=0.861509027839639, end_factor=0.001, weight_decay=1.2859640541025928e-07)
I0310 03:13:38.642289 140372199180096 submission_runner.py:526] Metrics: {'eval_results': [(1, {'train/accuracy': 0.49126385536926753, 'train/loss': 0.7915090918540955, 'train/mean_average_precision': 0.02229937079799641, 'validation/accuracy': 0.4928164733983001, 'validation/loss': 0.7820726633071899, 'validation/mean_average_precision': 0.025372116567514376, 'validation/num_examples': 43793, 'test/accuracy': 0.492324779852068, 'test/loss': 0.7814265489578247, 'test/mean_average_precision': 0.02763378395349064, 'test/num_examples': 43793, 'score': 5.292001247406006, 'total_duration': 5.294098854064941, 'global_step': 1, 'preemption_count': 0}), (876, {'train/accuracy': 0.9865373467754223, 'train/loss': 0.056160181760787964, 'train/mean_average_precision': 0.028723859137621856, 'validation/accuracy': 0.984117976109578, 'validation/loss': 0.06509634107351303, 'validation/mean_average_precision': 0.02929909083188226, 'validation/num_examples': 43793, 'test/accuracy': 0.983142103926419, 'test/loss': 0.06847210228443146, 'test/mean_average_precision': 0.031110032448114024, 'test/num_examples': 43793, 'score': 244.37642455101013, 'total_duration': 386.10321044921875, 'global_step': 876, 'preemption_count': 0}), (1758, {'train/accuracy': 0.9869110858692461, 'train/loss': 0.05378514528274536, 'train/mean_average_precision': 0.035033351772077795, 'validation/accuracy': 0.9841175701688795, 'validation/loss': 0.06344803422689438, 'validation/mean_average_precision': 0.039269100774430715, 'validation/num_examples': 43793, 'test/accuracy': 0.9831143050772071, 'test/loss': 0.06653417646884918, 'test/mean_average_precision': 0.0405116824387689, 'test/num_examples': 43793, 'score': 483.3239846229553, 'total_duration': 686.3542859554291, 'global_step': 1758, 'preemption_count': 0}), (2630, {'train/accuracy': 0.9866648915931626, 'train/loss': 0.051761284470558167, 'train/mean_average_precision': 0.05331550836765982, 'validation/accuracy': 0.9841378672038074, 'validation/loss': 0.06115926429629326, 'validation/mean_average_precision': 0.05149901313025025, 'validation/num_examples': 43793, 'test/accuracy': 0.9831517914041746, 'test/loss': 0.06447770446538925, 'test/mean_average_precision': 0.05253406210917031, 'test/num_examples': 43793, 'score': 722.4973301887512, 'total_duration': 987.7093179225922, 'global_step': 2630, 'preemption_count': 0}), (3495, {'train/accuracy': 0.9872166801721357, 'train/loss': 0.04780132696032524, 'train/mean_average_precision': 0.08339221455760047, 'validation/accuracy': 0.9843948276659953, 'validation/loss': 0.05705229192972183, 'validation/mean_average_precision': 0.08661681434173359, 'validation/num_examples': 43793, 'test/accuracy': 0.9833969267108612, 'test/loss': 0.060351449996232986, 'test/mean_average_precision': 0.08532997742554242, 'test/num_examples': 43793, 'score': 961.4343764781952, 'total_duration': 1289.249162197113, 'global_step': 3495, 'preemption_count': 0}), (4377, {'train/accuracy': 0.9877382796431193, 'train/loss': 0.04441026225686073, 'train/mean_average_precision': 0.11838754855360187, 'validation/accuracy': 0.9848734317495963, 'validation/loss': 0.05408042296767235, 'validation/mean_average_precision': 0.11406018138181306, 'validation/num_examples': 43793, 'test/accuracy': 0.9838783522358489, 'test/loss': 0.05691579356789589, 'test/mean_average_precision': 0.11410809040020607, 'test/num_examples': 43793, 'score': 1200.3200957775116, 'total_duration': 1591.6215107440948, 'global_step': 4377, 'preemption_count': 0}), (5255, {'train/accuracy': 0.9877959923195607, 'train/loss': 0.042978763580322266, 'train/mean_average_precision': 0.14064050322779786, 'validation/accuracy': 0.9851474417211236, 'validation/loss': 0.0517478808760643, 'validation/mean_average_precision': 0.13973242177516815, 'validation/num_examples': 43793, 'test/accuracy': 0.9842073052848561, 'test/loss': 0.0545126236975193, 'test/mean_average_precision': 0.13892683145846932, 'test/num_examples': 43793, 'score': 1439.421044588089, 'total_duration': 1892.6597862243652, 'global_step': 5255, 'preemption_count': 0}), (6138, {'train/accuracy': 0.9879936118759708, 'train/loss': 0.04157542809844017, 'train/mean_average_precision': 0.16764603032915903, 'validation/accuracy': 0.9853792338600008, 'validation/loss': 0.05048218369483948, 'validation/mean_average_precision': 0.15735016972184812, 'validation/num_examples': 43793, 'test/accuracy': 0.9844515982021727, 'test/loss': 0.05315732583403587, 'test/mean_average_precision': 0.1543258425548118, 'test/num_examples': 43793, 'score': 1678.5482125282288, 'total_duration': 2194.1103930473328, 'global_step': 6138, 'preemption_count': 0}), (7028, {'train/accuracy': 0.9886263541399571, 'train/loss': 0.039400722831487656, 'train/mean_average_precision': 0.1957593910631516, 'validation/accuracy': 0.9856999270118624, 'validation/loss': 0.048959314823150635, 'validation/mean_average_precision': 0.18294585380256653, 'validation/num_examples': 43793, 'test/accuracy': 0.9847586491275584, 'test/loss': 0.051604047417640686, 'test/mean_average_precision': 0.17963427922131012, 'test/num_examples': 43793, 'score': 1917.6646661758423, 'total_duration': 2495.871860265732, 'global_step': 7028, 'preemption_count': 0}), (7926, {'train/accuracy': 0.9886781722783503, 'train/loss': 0.03918695077300072, 'train/mean_average_precision': 0.20274889888109837, 'validation/accuracy': 0.9857604121759477, 'validation/loss': 0.04838194325566292, 'validation/mean_average_precision': 0.1896779518117608, 'validation/num_examples': 43793, 'test/accuracy': 0.9848955374001926, 'test/loss': 0.050965193659067154, 'test/mean_average_precision': 0.18708562028756698, 'test/num_examples': 43793, 'score': 2156.5665941238403, 'total_duration': 2796.4602794647217, 'global_step': 7926, 'preemption_count': 0}), (8819, {'train/accuracy': 0.9889500255372647, 'train/loss': 0.037685029208660126, 'train/mean_average_precision': 0.22604734852524877, 'validation/accuracy': 0.9859857092636479, 'validation/loss': 0.04720064625144005, 'validation/mean_average_precision': 0.2018465381390283, 'validation/num_examples': 43793, 'test/accuracy': 0.9850876021765657, 'test/loss': 0.04967644438147545, 'test/mean_average_precision': 0.20168262772863, 'test/num_examples': 43793, 'score': 2395.5882239341736, 'total_duration': 3097.83455491066, 'global_step': 8819, 'preemption_count': 0}), (9714, {'train/accuracy': 0.9890529000660345, 'train/loss': 0.03719095140695572, 'train/mean_average_precision': 0.2437141280765701, 'validation/accuracy': 0.9860640558184698, 'validation/loss': 0.04704448580741882, 'validation/mean_average_precision': 0.2112658466804817, 'validation/num_examples': 43793, 'test/accuracy': 0.9851402515121942, 'test/loss': 0.04955701157450676, 'test/mean_average_precision': 0.2057642311521517, 'test/num_examples': 43793, 'score': 2634.7285051345825, 'total_duration': 3399.7502171993256, 'global_step': 9714, 'preemption_count': 0}), (10609, {'train/accuracy': 0.9892725363708202, 'train/loss': 0.0363214910030365, 'train/mean_average_precision': 0.2630055357246244, 'validation/accuracy': 0.9863181746957678, 'validation/loss': 0.046280860900878906, 'validation/mean_average_precision': 0.2222629184417636, 'validation/num_examples': 43793, 'test/accuracy': 0.9853512700493935, 'test/loss': 0.04881281033158302, 'test/mean_average_precision': 0.22212380941670062, 'test/num_examples': 43793, 'score': 2873.7947220802307, 'total_duration': 3701.5439398288727, 'global_step': 10609, 'preemption_count': 0}), (11508, {'train/accuracy': 0.9895931190430107, 'train/loss': 0.035192571580410004, 'train/mean_average_precision': 0.2873436082384145, 'validation/accuracy': 0.9863279172725331, 'validation/loss': 0.04591350257396698, 'validation/mean_average_precision': 0.22386595467967396, 'validation/num_examples': 43793, 'test/accuracy': 0.9854051829690772, 'test/loss': 0.04844185337424278, 'test/mean_average_precision': 0.21946643829806364, 'test/num_examples': 43793, 'score': 3112.811789035797, 'total_duration': 4003.98139667511, 'global_step': 11508, 'preemption_count': 0}), (12398, {'train/accuracy': 0.9896633689719555, 'train/loss': 0.034833647310733795, 'train/mean_average_precision': 0.2876197009159856, 'validation/accuracy': 0.9864850163228754, 'validation/loss': 0.04543754458427429, 'validation/mean_average_precision': 0.23009094248703854, 'validation/num_examples': 43793, 'test/accuracy': 0.9855349109320659, 'test/loss': 0.04800523445010185, 'test/mean_average_precision': 0.2332415888777941, 'test/num_examples': 43793, 'score': 3351.7707891464233, 'total_duration': 4306.062299489975, 'global_step': 12398, 'preemption_count': 0}), (13294, {'train/accuracy': 0.9899022613851453, 'train/loss': 0.034058067947626114, 'train/mean_average_precision': 0.2982618731945897, 'validation/accuracy': 0.9865796005056398, 'validation/loss': 0.044942669570446014, 'validation/mean_average_precision': 0.2420953829797762, 'validation/num_examples': 43793, 'test/accuracy': 0.9857080219476126, 'test/loss': 0.04762006551027298, 'test/mean_average_precision': 0.23201857295425204, 'test/num_examples': 43793, 'score': 3590.860845565796, 'total_duration': 4609.04603767395, 'global_step': 13294, 'preemption_count': 0}), (14179, {'train/accuracy': 0.9899685452549607, 'train/loss': 0.03375289589166641, 'train/mean_average_precision': 0.3173908791583978, 'validation/accuracy': 0.9866035510068547, 'validation/loss': 0.0451202392578125, 'validation/mean_average_precision': 0.2389279229315391, 'validation/num_examples': 43793, 'test/accuracy': 0.9857185518147383, 'test/loss': 0.04762783646583557, 'test/mean_average_precision': 0.23987969473756626, 'test/num_examples': 43793, 'score': 3829.86913394928, 'total_duration': 4912.648462295532, 'global_step': 14179, 'preemption_count': 0}), (15068, {'train/accuracy': 0.9899110621170478, 'train/loss': 0.033747754991054535, 'train/mean_average_precision': 0.31201895537150803, 'validation/accuracy': 0.9864732440426173, 'validation/loss': 0.044722046703100204, 'validation/mean_average_precision': 0.24172375413921507, 'validation/num_examples': 43793, 'test/accuracy': 0.9856486334970236, 'test/loss': 0.047151535749435425, 'test/mean_average_precision': 0.23945018083224043, 'test/num_examples': 43793, 'score': 4068.7083513736725, 'total_duration': 5214.787127017975, 'global_step': 15068, 'preemption_count': 0}), (15961, {'train/accuracy': 0.9901138411539936, 'train/loss': 0.03330942988395691, 'train/mean_average_precision': 0.3270719078781566, 'validation/accuracy': 0.9866096401173331, 'validation/loss': 0.0446469709277153, 'validation/mean_average_precision': 0.2497622338589787, 'validation/num_examples': 43793, 'test/accuracy': 0.9856903317708414, 'test/loss': 0.04720886051654816, 'test/mean_average_precision': 0.2434674174206593, 'test/num_examples': 43793, 'score': 4307.606699705124, 'total_duration': 5516.709993362427, 'global_step': 15961, 'preemption_count': 0}), (16851, {'train/accuracy': 0.9902286325710936, 'train/loss': 0.03281343728303909, 'train/mean_average_precision': 0.33965927717043654, 'validation/accuracy': 0.9865934024893908, 'validation/loss': 0.04456828534603119, 'validation/mean_average_precision': 0.24967472956111264, 'validation/num_examples': 43793, 'test/accuracy': 0.9857602500885562, 'test/loss': 0.04702538251876831, 'test/mean_average_precision': 0.2546390198864271, 'test/num_examples': 43793, 'score': 4546.6383147239685, 'total_duration': 5818.99046587944, 'global_step': 16851, 'preemption_count': 0}), (17754, {'train/accuracy': 0.9903673462968006, 'train/loss': 0.03214098885655403, 'train/mean_average_precision': 0.346038727069608, 'validation/accuracy': 0.9867841946177135, 'validation/loss': 0.04442818462848663, 'validation/mean_average_precision': 0.2564213221348239, 'validation/num_examples': 43793, 'test/accuracy': 0.9858828177418995, 'test/loss': 0.046999022364616394, 'test/mean_average_precision': 0.25713787138598165, 'test/num_examples': 43793, 'score': 4785.599718809128, 'total_duration': 6120.931733846664, 'global_step': 17754, 'preemption_count': 0}), (18633, {'train/accuracy': 0.9904756872223965, 'train/loss': 0.031618632376194, 'train/mean_average_precision': 0.3715917819054738, 'validation/accuracy': 0.9868434619597031, 'validation/loss': 0.04433140903711319, 'validation/mean_average_precision': 0.2563570103541287, 'validation/num_examples': 43793, 'test/accuracy': 0.9859384154403232, 'test/loss': 0.04706360027194023, 'test/mean_average_precision': 0.25373384438275903, 'test/num_examples': 43793, 'score': 5024.634745359421, 'total_duration': 6424.218777179718, 'global_step': 18633, 'preemption_count': 0}), (19523, {'train/accuracy': 0.9908031241960773, 'train/loss': 0.03079315833747387, 'train/mean_average_precision': 0.36636948802795377, 'validation/accuracy': 0.9868247886875694, 'validation/loss': 0.04382000118494034, 'validation/mean_average_precision': 0.26865446146464583, 'validation/num_examples': 43793, 'test/accuracy': 0.9859666354842201, 'test/loss': 0.046524547040462494, 'test/mean_average_precision': 0.2604606590843757, 'test/num_examples': 43793, 'score': 5263.717045545578, 'total_duration': 6726.578374147415, 'global_step': 19523, 'preemption_count': 0}), (20418, {'train/accuracy': 0.9908423435530975, 'train/loss': 0.030524253845214844, 'train/mean_average_precision': 0.39462691525899934, 'validation/accuracy': 0.9868783728597792, 'validation/loss': 0.04397283494472504, 'validation/mean_average_precision': 0.2627359718442208, 'validation/num_examples': 43793, 'test/accuracy': 0.9860504532265408, 'test/loss': 0.04655790328979492, 'test/mean_average_precision': 0.2615845346483694, 'test/num_examples': 43793, 'score': 5502.552521467209, 'total_duration': 7029.149147510529, 'global_step': 20418, 'preemption_count': 0}), (21319, {'train/accuracy': 0.9910019806291159, 'train/loss': 0.030017368495464325, 'train/mean_average_precision': 0.39697459492751963, 'validation/accuracy': 0.9869002936575013, 'validation/loss': 0.04377181828022003, 'validation/mean_average_precision': 0.2695947749861536, 'validation/num_examples': 43793, 'test/accuracy': 0.9860892031375634, 'test/loss': 0.046448737382888794, 'test/mean_average_precision': 0.2674688459342683, 'test/num_examples': 43793, 'score': 5741.568090677261, 'total_duration': 7332.786115884781, 'global_step': 21319, 'preemption_count': 0}), (22229, {'train/accuracy': 0.9909692971456939, 'train/loss': 0.029974257573485374, 'train/mean_average_precision': 0.39771038045102136, 'validation/accuracy': 0.9869132837598552, 'validation/loss': 0.04391176998615265, 'validation/mean_average_precision': 0.27013308782024936, 'validation/num_examples': 43793, 'test/accuracy': 0.986038238580675, 'test/loss': 0.04659600928425789, 'test/mean_average_precision': 0.2660742627280917, 'test/num_examples': 43793, 'score': 5980.576172351837, 'total_duration': 7635.038738965988, 'global_step': 22229, 'preemption_count': 0}), (23128, {'train/accuracy': 0.9911436785584045, 'train/loss': 0.0294950008392334, 'train/mean_average_precision': 0.4086222157120627, 'validation/accuracy': 0.9869356104982759, 'validation/loss': 0.043839164078235626, 'validation/mean_average_precision': 0.26697989479662193, 'validation/num_examples': 43793, 'test/accuracy': 0.986127531853901, 'test/loss': 0.04627693071961403, 'test/mean_average_precision': 0.2658831970911197, 'test/num_examples': 43793, 'score': 6219.530841588974, 'total_duration': 7938.195160627365, 'global_step': 23128, 'preemption_count': 0}), (24028, {'train/accuracy': 0.9911354676866475, 'train/loss': 0.02938840538263321, 'train/mean_average_precision': 0.41270226496473916, 'validation/accuracy': 0.9869514421855198, 'validation/loss': 0.04357435181736946, 'validation/mean_average_precision': 0.2720871740966498, 'validation/num_examples': 43793, 'test/accuracy': 0.9860348690231948, 'test/loss': 0.04613222926855087, 'test/mean_average_precision': 0.26651812932492414, 'test/num_examples': 43793, 'score': 6458.381185531616, 'total_duration': 8240.247641086578, 'global_step': 24028, 'preemption_count': 0}), (24927, {'train/accuracy': 0.9911982035047543, 'train/loss': 0.029199928045272827, 'train/mean_average_precision': 0.4169672335024129, 'validation/accuracy': 0.986922620395922, 'validation/loss': 0.043857745826244354, 'validation/mean_average_precision': 0.2731287987226965, 'validation/num_examples': 43793, 'test/accuracy': 0.9860896243322484, 'test/loss': 0.0465208925306797, 'test/mean_average_precision': 0.26727973143262507, 'test/num_examples': 43793, 'score': 6697.4242832660675, 'total_duration': 8542.734434843063, 'global_step': 24927, 'preemption_count': 0}), (25820, {'train/accuracy': 0.9913267726233342, 'train/loss': 0.028845127671957016, 'train/mean_average_precision': 0.42906816075989046, 'validation/accuracy': 0.9868540164178656, 'validation/loss': 0.04380244016647339, 'validation/mean_average_precision': 0.27133327186421247, 'validation/num_examples': 43793, 'test/accuracy': 0.9860580347308714, 'test/loss': 0.046390801668167114, 'test/mean_average_precision': 0.26844411589663625, 'test/num_examples': 43793, 'score': 6936.468993663788, 'total_duration': 8845.968259096146, 'global_step': 25820, 'preemption_count': 0}), (26707, {'train/accuracy': 0.9914751059957464, 'train/loss': 0.028314396739006042, 'train/mean_average_precision': 0.4239150020995761, 'validation/accuracy': 0.9870005610100454, 'validation/loss': 0.04365060478448868, 'validation/mean_average_precision': 0.2770969516285887, 'validation/num_examples': 43793, 'test/accuracy': 0.9860799368544928, 'test/loss': 0.04633529856801033, 'test/mean_average_precision': 0.2691959331587855, 'test/num_examples': 43793, 'score': 7175.454701662064, 'total_duration': 9149.07322716713, 'global_step': 26707, 'preemption_count': 0}), (27600, {'train/accuracy': 0.9916232221292103, 'train/loss': 0.0275217704474926, 'train/mean_average_precision': 0.4659154793624596, 'validation/accuracy': 0.9870001550693468, 'validation/loss': 0.04385528340935707, 'validation/mean_average_precision': 0.27478901964683383, 'validation/num_examples': 43793, 'test/accuracy': 0.9861641757914985, 'test/loss': 0.04660801962018013, 'test/mean_average_precision': 0.26984176668578685, 'test/num_examples': 43793, 'score': 7414.542927742004, 'total_duration': 9454.122442245483, 'global_step': 27600, 'preemption_count': 0}), (28479, {'train/accuracy': 0.9918387990911377, 'train/loss': 0.027026765048503876, 'train/mean_average_precision': 0.47511631129581866, 'validation/accuracy': 0.9868320956201434, 'validation/loss': 0.04387270659208298, 'validation/mean_average_precision': 0.2740803041682703, 'validation/num_examples': 43793, 'test/accuracy': 0.9860310782710295, 'test/loss': 0.04656258225440979, 'test/mean_average_precision': 0.2726253586317318, 'test/num_examples': 43793, 'score': 7653.482821464539, 'total_duration': 9756.869518756866, 'global_step': 28479, 'preemption_count': 0}), (29369, {'train/accuracy': 0.9917581037927493, 'train/loss': 0.026948481798171997, 'train/mean_average_precision': 0.4554627546903285, 'validation/accuracy': 0.9870655115218149, 'validation/loss': 0.043927185237407684, 'validation/mean_average_precision': 0.27205836425640384, 'validation/num_examples': 43793, 'test/accuracy': 0.9862399908348036, 'test/loss': 0.0464450903236866, 'test/mean_average_precision': 0.27065357229158304, 'test/num_examples': 43793, 'score': 7892.332934856415, 'total_duration': 10058.942781925201, 'global_step': 29369, 'preemption_count': 0}), (30250, {'train/accuracy': 0.9919171056993568, 'train/loss': 0.026598507538437843, 'train/mean_average_precision': 0.4631048513639719, 'validation/accuracy': 0.9870614521148292, 'validation/loss': 0.044161126017570496, 'validation/mean_average_precision': 0.2773548397562986, 'validation/num_examples': 43793, 'test/accuracy': 0.9862404120294886, 'test/loss': 0.046776946634054184, 'test/mean_average_precision': 0.26984552128651396, 'test/num_examples': 43793, 'score': 8131.194964170456, 'total_duration': 10362.111006975174, 'global_step': 30250, 'preemption_count': 0}), (31130, {'train/accuracy': 0.9920165891716226, 'train/loss': 0.02635093219578266, 'train/mean_average_precision': 0.48155599757329093, 'validation/accuracy': 0.9870529273601595, 'validation/loss': 0.04399643838405609, 'validation/mean_average_precision': 0.27987414245329295, 'validation/num_examples': 43793, 'test/accuracy': 0.9861645969861835, 'test/loss': 0.04660682752728462, 'test/mean_average_precision': 0.2740241611489711, 'test/num_examples': 43793, 'score': 8370.126635551453, 'total_duration': 10664.905596017838, 'global_step': 31130, 'preemption_count': 0}), (32006, {'train/accuracy': 0.9920263894818413, 'train/loss': 0.026412736624479294, 'train/mean_average_precision': 0.4737201618525736, 'validation/accuracy': 0.9869790461530218, 'validation/loss': 0.04399755969643593, 'validation/mean_average_precision': 0.28368589592652377, 'validation/num_examples': 43793, 'test/accuracy': 0.9861426948625621, 'test/loss': 0.04674329236149788, 'test/mean_average_precision': 0.27188939623129466, 'test/num_examples': 43793, 'score': 8609.14685511589, 'total_duration': 10967.989903211594, 'global_step': 32006, 'preemption_count': 0})], 'global_step': 32006}
I0310 03:13:38.642430 140372199180096 submission_runner.py:527] Timing: 8609.14685511589
I0310 03:13:38.642534 140372199180096 submission_runner.py:528] ====================
I0310 03:13:38.642708 140372199180096 submission_runner.py:587] Final ogbg score: 8609.14685511589
